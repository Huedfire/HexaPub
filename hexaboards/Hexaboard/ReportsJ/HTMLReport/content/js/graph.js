/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "maxY": 4815.0, "series": [{"data": [[0.0, 3.0], [0.1, 4.0], [0.2, 4.0], [0.3, 4.0], [0.4, 5.0], [0.5, 5.0], [0.6, 5.0], [0.7, 5.0], [0.8, 5.0], [0.9, 5.0], [1.0, 5.0], [1.1, 5.0], [1.2, 5.0], [1.3, 5.0], [1.4, 5.0], [1.5, 5.0], [1.6, 5.0], [1.7, 5.0], [1.8, 5.0], [1.9, 5.0], [2.0, 5.0], [2.1, 5.0], [2.2, 5.0], [2.3, 5.0], [2.4, 5.0], [2.5, 5.0], [2.6, 5.0], [2.7, 5.0], [2.8, 5.0], [2.9, 5.0], [3.0, 5.0], [3.1, 5.0], [3.2, 5.0], [3.3, 5.0], [3.4, 5.0], [3.5, 5.0], [3.6, 5.0], [3.7, 5.0], [3.8, 5.0], [3.9, 5.0], [4.0, 5.0], [4.1, 5.0], [4.2, 5.0], [4.3, 5.0], [4.4, 5.0], [4.5, 5.0], [4.6, 5.0], [4.7, 5.0], [4.8, 5.0], [4.9, 5.0], [5.0, 5.0], [5.1, 5.0], [5.2, 5.0], [5.3, 5.0], [5.4, 5.0], [5.5, 5.0], [5.6, 5.0], [5.7, 5.0], [5.8, 5.0], [5.9, 5.0], [6.0, 5.0], [6.1, 5.0], [6.2, 5.0], [6.3, 5.0], [6.4, 5.0], [6.5, 5.0], [6.6, 5.0], [6.7, 5.0], [6.8, 5.0], [6.9, 5.0], [7.0, 5.0], [7.1, 5.0], [7.2, 5.0], [7.3, 5.0], [7.4, 5.0], [7.5, 5.0], [7.6, 5.0], [7.7, 5.0], [7.8, 5.0], [7.9, 5.0], [8.0, 5.0], [8.1, 5.0], [8.2, 5.0], [8.3, 5.0], [8.4, 5.0], [8.5, 5.0], [8.6, 5.0], [8.7, 5.0], [8.8, 5.0], [8.9, 5.0], [9.0, 5.0], [9.1, 5.0], [9.2, 5.0], [9.3, 5.0], [9.4, 5.0], [9.5, 5.0], [9.6, 5.0], [9.7, 5.0], [9.8, 5.0], [9.9, 5.0], [10.0, 5.0], [10.1, 5.0], [10.2, 6.0], [10.3, 6.0], [10.4, 6.0], [10.5, 6.0], [10.6, 6.0], [10.7, 6.0], [10.8, 6.0], [10.9, 6.0], [11.0, 6.0], [11.1, 6.0], [11.2, 6.0], [11.3, 6.0], [11.4, 6.0], [11.5, 6.0], [11.6, 6.0], [11.7, 6.0], [11.8, 6.0], [11.9, 6.0], [12.0, 6.0], [12.1, 6.0], [12.2, 6.0], [12.3, 6.0], [12.4, 6.0], [12.5, 6.0], [12.6, 6.0], [12.7, 6.0], [12.8, 6.0], [12.9, 6.0], [13.0, 6.0], [13.1, 6.0], [13.2, 6.0], [13.3, 6.0], [13.4, 6.0], [13.5, 6.0], [13.6, 6.0], [13.7, 6.0], [13.8, 6.0], [13.9, 6.0], [14.0, 6.0], [14.1, 6.0], [14.2, 6.0], [14.3, 6.0], [14.4, 6.0], [14.5, 6.0], [14.6, 6.0], [14.7, 6.0], [14.8, 6.0], [14.9, 6.0], [15.0, 6.0], [15.1, 6.0], [15.2, 6.0], [15.3, 6.0], [15.4, 6.0], [15.5, 6.0], [15.6, 6.0], [15.7, 6.0], [15.8, 6.0], [15.9, 6.0], [16.0, 6.0], [16.1, 6.0], [16.2, 6.0], [16.3, 6.0], [16.4, 6.0], [16.5, 6.0], [16.6, 6.0], [16.7, 6.0], [16.8, 6.0], [16.9, 6.0], [17.0, 6.0], [17.1, 6.0], [17.2, 6.0], [17.3, 6.0], [17.4, 6.0], [17.5, 6.0], [17.6, 6.0], [17.7, 6.0], [17.8, 6.0], [17.9, 6.0], [18.0, 6.0], [18.1, 6.0], [18.2, 6.0], [18.3, 6.0], [18.4, 6.0], [18.5, 6.0], [18.6, 6.0], [18.7, 6.0], [18.8, 6.0], [18.9, 6.0], [19.0, 6.0], [19.1, 6.0], [19.2, 6.0], [19.3, 6.0], [19.4, 6.0], [19.5, 6.0], [19.6, 6.0], [19.7, 6.0], [19.8, 6.0], [19.9, 6.0], [20.0, 6.0], [20.1, 6.0], [20.2, 6.0], [20.3, 6.0], [20.4, 6.0], [20.5, 6.0], [20.6, 6.0], [20.7, 6.0], [20.8, 6.0], [20.9, 6.0], [21.0, 6.0], [21.1, 6.0], [21.2, 6.0], [21.3, 6.0], [21.4, 6.0], [21.5, 6.0], [21.6, 6.0], [21.7, 6.0], [21.8, 6.0], [21.9, 6.0], [22.0, 6.0], [22.1, 6.0], [22.2, 6.0], [22.3, 6.0], [22.4, 6.0], [22.5, 6.0], [22.6, 6.0], [22.7, 6.0], [22.8, 6.0], [22.9, 6.0], [23.0, 6.0], [23.1, 6.0], [23.2, 6.0], [23.3, 6.0], [23.4, 6.0], [23.5, 6.0], [23.6, 6.0], [23.7, 6.0], [23.8, 6.0], [23.9, 6.0], [24.0, 6.0], [24.1, 6.0], [24.2, 6.0], [24.3, 6.0], [24.4, 6.0], [24.5, 6.0], [24.6, 6.0], [24.7, 6.0], [24.8, 6.0], [24.9, 6.0], [25.0, 6.0], [25.1, 6.0], [25.2, 6.0], [25.3, 6.0], [25.4, 6.0], [25.5, 6.0], [25.6, 6.0], [25.7, 6.0], [25.8, 6.0], [25.9, 6.0], [26.0, 6.0], [26.1, 6.0], [26.2, 6.0], [26.3, 6.0], [26.4, 6.0], [26.5, 6.0], [26.6, 6.0], [26.7, 6.0], [26.8, 6.0], [26.9, 6.0], [27.0, 6.0], [27.1, 6.0], [27.2, 6.0], [27.3, 6.0], [27.4, 6.0], [27.5, 6.0], [27.6, 6.0], [27.7, 6.0], [27.8, 6.0], [27.9, 6.0], [28.0, 6.0], [28.1, 6.0], [28.2, 6.0], [28.3, 6.0], [28.4, 6.0], [28.5, 6.0], [28.6, 6.0], [28.7, 6.0], [28.8, 6.0], [28.9, 6.0], [29.0, 6.0], [29.1, 6.0], [29.2, 6.0], [29.3, 6.0], [29.4, 6.0], [29.5, 6.0], [29.6, 6.0], [29.7, 6.0], [29.8, 6.0], [29.9, 6.0], [30.0, 6.0], [30.1, 6.0], [30.2, 6.0], [30.3, 6.0], [30.4, 6.0], [30.5, 6.0], [30.6, 6.0], [30.7, 6.0], [30.8, 6.0], [30.9, 6.0], [31.0, 6.0], [31.1, 6.0], [31.2, 6.0], [31.3, 6.0], [31.4, 6.0], [31.5, 6.0], [31.6, 6.0], [31.7, 6.0], [31.8, 6.0], [31.9, 6.0], [32.0, 6.0], [32.1, 6.0], [32.2, 6.0], [32.3, 6.0], [32.4, 6.0], [32.5, 6.0], [32.6, 6.0], [32.7, 6.0], [32.8, 6.0], [32.9, 6.0], [33.0, 6.0], [33.1, 6.0], [33.2, 6.0], [33.3, 6.0], [33.4, 6.0], [33.5, 6.0], [33.6, 6.0], [33.7, 6.0], [33.8, 6.0], [33.9, 6.0], [34.0, 6.0], [34.1, 6.0], [34.2, 6.0], [34.3, 6.0], [34.4, 6.0], [34.5, 6.0], [34.6, 6.0], [34.7, 6.0], [34.8, 6.0], [34.9, 6.0], [35.0, 6.0], [35.1, 6.0], [35.2, 6.0], [35.3, 6.0], [35.4, 6.0], [35.5, 6.0], [35.6, 6.0], [35.7, 6.0], [35.8, 6.0], [35.9, 6.0], [36.0, 6.0], [36.1, 6.0], [36.2, 6.0], [36.3, 6.0], [36.4, 6.0], [36.5, 6.0], [36.6, 6.0], [36.7, 6.0], [36.8, 6.0], [36.9, 6.0], [37.0, 6.0], [37.1, 6.0], [37.2, 6.0], [37.3, 6.0], [37.4, 6.0], [37.5, 6.0], [37.6, 6.0], [37.7, 6.0], [37.8, 6.0], [37.9, 6.0], [38.0, 6.0], [38.1, 6.0], [38.2, 7.0], [38.3, 7.0], [38.4, 7.0], [38.5, 7.0], [38.6, 7.0], [38.7, 7.0], [38.8, 7.0], [38.9, 7.0], [39.0, 7.0], [39.1, 7.0], [39.2, 7.0], [39.3, 7.0], [39.4, 7.0], [39.5, 7.0], [39.6, 7.0], [39.7, 7.0], [39.8, 7.0], [39.9, 7.0], [40.0, 7.0], [40.1, 7.0], [40.2, 7.0], [40.3, 7.0], [40.4, 7.0], [40.5, 7.0], [40.6, 7.0], [40.7, 7.0], [40.8, 7.0], [40.9, 7.0], [41.0, 7.0], [41.1, 7.0], [41.2, 7.0], [41.3, 7.0], [41.4, 7.0], [41.5, 7.0], [41.6, 7.0], [41.7, 7.0], [41.8, 7.0], [41.9, 7.0], [42.0, 7.0], [42.1, 7.0], [42.2, 7.0], [42.3, 7.0], [42.4, 7.0], [42.5, 7.0], [42.6, 7.0], [42.7, 7.0], [42.8, 7.0], [42.9, 7.0], [43.0, 7.0], [43.1, 7.0], [43.2, 7.0], [43.3, 7.0], [43.4, 7.0], [43.5, 7.0], [43.6, 7.0], [43.7, 7.0], [43.8, 7.0], [43.9, 7.0], [44.0, 7.0], [44.1, 7.0], [44.2, 7.0], [44.3, 7.0], [44.4, 7.0], [44.5, 7.0], [44.6, 7.0], [44.7, 7.0], [44.8, 7.0], [44.9, 7.0], [45.0, 7.0], [45.1, 7.0], [45.2, 7.0], [45.3, 7.0], [45.4, 7.0], [45.5, 7.0], [45.6, 7.0], [45.7, 7.0], [45.8, 7.0], [45.9, 7.0], [46.0, 7.0], [46.1, 7.0], [46.2, 7.0], [46.3, 7.0], [46.4, 7.0], [46.5, 7.0], [46.6, 7.0], [46.7, 7.0], [46.8, 7.0], [46.9, 7.0], [47.0, 7.0], [47.1, 7.0], [47.2, 7.0], [47.3, 7.0], [47.4, 7.0], [47.5, 7.0], [47.6, 7.0], [47.7, 7.0], [47.8, 7.0], [47.9, 7.0], [48.0, 7.0], [48.1, 7.0], [48.2, 7.0], [48.3, 7.0], [48.4, 7.0], [48.5, 7.0], [48.6, 7.0], [48.7, 7.0], [48.8, 7.0], [48.9, 7.0], [49.0, 7.0], [49.1, 7.0], [49.2, 7.0], [49.3, 7.0], [49.4, 7.0], [49.5, 7.0], [49.6, 7.0], [49.7, 7.0], [49.8, 7.0], [49.9, 7.0], [50.0, 7.0], [50.1, 7.0], [50.2, 7.0], [50.3, 7.0], [50.4, 7.0], [50.5, 7.0], [50.6, 7.0], [50.7, 7.0], [50.8, 7.0], [50.9, 7.0], [51.0, 7.0], [51.1, 7.0], [51.2, 7.0], [51.3, 7.0], [51.4, 7.0], [51.5, 7.0], [51.6, 7.0], [51.7, 7.0], [51.8, 7.0], [51.9, 7.0], [52.0, 7.0], [52.1, 7.0], [52.2, 7.0], [52.3, 7.0], [52.4, 7.0], [52.5, 7.0], [52.6, 7.0], [52.7, 7.0], [52.8, 7.0], [52.9, 7.0], [53.0, 7.0], [53.1, 7.0], [53.2, 7.0], [53.3, 7.0], [53.4, 7.0], [53.5, 7.0], [53.6, 7.0], [53.7, 7.0], [53.8, 7.0], [53.9, 7.0], [54.0, 7.0], [54.1, 7.0], [54.2, 7.0], [54.3, 7.0], [54.4, 7.0], [54.5, 7.0], [54.6, 7.0], [54.7, 7.0], [54.8, 7.0], [54.9, 7.0], [55.0, 7.0], [55.1, 7.0], [55.2, 7.0], [55.3, 7.0], [55.4, 7.0], [55.5, 7.0], [55.6, 7.0], [55.7, 7.0], [55.8, 7.0], [55.9, 7.0], [56.0, 7.0], [56.1, 7.0], [56.2, 7.0], [56.3, 7.0], [56.4, 7.0], [56.5, 7.0], [56.6, 7.0], [56.7, 7.0], [56.8, 7.0], [56.9, 7.0], [57.0, 7.0], [57.1, 7.0], [57.2, 7.0], [57.3, 7.0], [57.4, 7.0], [57.5, 7.0], [57.6, 7.0], [57.7, 7.0], [57.8, 7.0], [57.9, 7.0], [58.0, 7.0], [58.1, 7.0], [58.2, 7.0], [58.3, 7.0], [58.4, 7.0], [58.5, 7.0], [58.6, 7.0], [58.7, 7.0], [58.8, 7.0], [58.9, 7.0], [59.0, 7.0], [59.1, 7.0], [59.2, 7.0], [59.3, 7.0], [59.4, 7.0], [59.5, 7.0], [59.6, 7.0], [59.7, 7.0], [59.8, 7.0], [59.9, 7.0], [60.0, 7.0], [60.1, 7.0], [60.2, 7.0], [60.3, 7.0], [60.4, 7.0], [60.5, 7.0], [60.6, 7.0], [60.7, 7.0], [60.8, 7.0], [60.9, 7.0], [61.0, 7.0], [61.1, 7.0], [61.2, 7.0], [61.3, 7.0], [61.4, 7.0], [61.5, 7.0], [61.6, 7.0], [61.7, 8.0], [61.8, 8.0], [61.9, 8.0], [62.0, 8.0], [62.1, 8.0], [62.2, 8.0], [62.3, 8.0], [62.4, 8.0], [62.5, 8.0], [62.6, 8.0], [62.7, 8.0], [62.8, 8.0], [62.9, 8.0], [63.0, 8.0], [63.1, 8.0], [63.2, 8.0], [63.3, 8.0], [63.4, 8.0], [63.5, 8.0], [63.6, 8.0], [63.7, 8.0], [63.8, 8.0], [63.9, 8.0], [64.0, 8.0], [64.1, 8.0], [64.2, 8.0], [64.3, 8.0], [64.4, 8.0], [64.5, 8.0], [64.6, 8.0], [64.7, 8.0], [64.8, 8.0], [64.9, 8.0], [65.0, 8.0], [65.1, 8.0], [65.2, 8.0], [65.3, 8.0], [65.4, 8.0], [65.5, 8.0], [65.6, 8.0], [65.7, 8.0], [65.8, 8.0], [65.9, 8.0], [66.0, 8.0], [66.1, 8.0], [66.2, 8.0], [66.3, 8.0], [66.4, 8.0], [66.5, 8.0], [66.6, 8.0], [66.7, 8.0], [66.8, 8.0], [66.9, 8.0], [67.0, 8.0], [67.1, 8.0], [67.2, 8.0], [67.3, 8.0], [67.4, 8.0], [67.5, 8.0], [67.6, 8.0], [67.7, 8.0], [67.8, 8.0], [67.9, 8.0], [68.0, 8.0], [68.1, 8.0], [68.2, 8.0], [68.3, 8.0], [68.4, 8.0], [68.5, 8.0], [68.6, 8.0], [68.7, 8.0], [68.8, 8.0], [68.9, 8.0], [69.0, 8.0], [69.1, 8.0], [69.2, 8.0], [69.3, 8.0], [69.4, 8.0], [69.5, 8.0], [69.6, 8.0], [69.7, 8.0], [69.8, 8.0], [69.9, 8.0], [70.0, 8.0], [70.1, 8.0], [70.2, 8.0], [70.3, 8.0], [70.4, 8.0], [70.5, 8.0], [70.6, 8.0], [70.7, 8.0], [70.8, 8.0], [70.9, 8.0], [71.0, 8.0], [71.1, 8.0], [71.2, 8.0], [71.3, 8.0], [71.4, 8.0], [71.5, 8.0], [71.6, 8.0], [71.7, 8.0], [71.8, 8.0], [71.9, 8.0], [72.0, 8.0], [72.1, 8.0], [72.2, 8.0], [72.3, 8.0], [72.4, 8.0], [72.5, 8.0], [72.6, 8.0], [72.7, 8.0], [72.8, 8.0], [72.9, 8.0], [73.0, 8.0], [73.1, 8.0], [73.2, 8.0], [73.3, 8.0], [73.4, 8.0], [73.5, 8.0], [73.6, 8.0], [73.7, 8.0], [73.8, 8.0], [73.9, 8.0], [74.0, 8.0], [74.1, 8.0], [74.2, 8.0], [74.3, 8.0], [74.4, 8.0], [74.5, 8.0], [74.6, 8.0], [74.7, 8.0], [74.8, 8.0], [74.9, 8.0], [75.0, 8.0], [75.1, 8.0], [75.2, 9.0], [75.3, 9.0], [75.4, 9.0], [75.5, 9.0], [75.6, 9.0], [75.7, 9.0], [75.8, 9.0], [75.9, 9.0], [76.0, 9.0], [76.1, 9.0], [76.2, 9.0], [76.3, 9.0], [76.4, 9.0], [76.5, 9.0], [76.6, 9.0], [76.7, 9.0], [76.8, 9.0], [76.9, 9.0], [77.0, 9.0], [77.1, 9.0], [77.2, 9.0], [77.3, 9.0], [77.4, 9.0], [77.5, 9.0], [77.6, 9.0], [77.7, 9.0], [77.8, 9.0], [77.9, 9.0], [78.0, 9.0], [78.1, 9.0], [78.2, 9.0], [78.3, 9.0], [78.4, 9.0], [78.5, 9.0], [78.6, 9.0], [78.7, 9.0], [78.8, 9.0], [78.9, 9.0], [79.0, 9.0], [79.1, 9.0], [79.2, 9.0], [79.3, 9.0], [79.4, 9.0], [79.5, 9.0], [79.6, 9.0], [79.7, 9.0], [79.8, 9.0], [79.9, 9.0], [80.0, 9.0], [80.1, 9.0], [80.2, 9.0], [80.3, 9.0], [80.4, 9.0], [80.5, 9.0], [80.6, 9.0], [80.7, 9.0], [80.8, 9.0], [80.9, 9.0], [81.0, 9.0], [81.1, 9.0], [81.2, 9.0], [81.3, 9.0], [81.4, 9.0], [81.5, 9.0], [81.6, 9.0], [81.7, 9.0], [81.8, 9.0], [81.9, 10.0], [82.0, 10.0], [82.1, 10.0], [82.2, 10.0], [82.3, 10.0], [82.4, 10.0], [82.5, 10.0], [82.6, 10.0], [82.7, 10.0], [82.8, 10.0], [82.9, 10.0], [83.0, 10.0], [83.1, 10.0], [83.2, 10.0], [83.3, 10.0], [83.4, 10.0], [83.5, 10.0], [83.6, 10.0], [83.7, 10.0], [83.8, 10.0], [83.9, 10.0], [84.0, 10.0], [84.1, 10.0], [84.2, 10.0], [84.3, 10.0], [84.4, 10.0], [84.5, 10.0], [84.6, 10.0], [84.7, 10.0], [84.8, 10.0], [84.9, 10.0], [85.0, 10.0], [85.1, 10.0], [85.2, 10.0], [85.3, 11.0], [85.4, 11.0], [85.5, 11.0], [85.6, 11.0], [85.7, 11.0], [85.8, 11.0], [85.9, 11.0], [86.0, 11.0], [86.1, 11.0], [86.2, 11.0], [86.3, 11.0], [86.4, 11.0], [86.5, 11.0], [86.6, 11.0], [86.7, 11.0], [86.8, 11.0], [86.9, 11.0], [87.0, 11.0], [87.1, 11.0], [87.2, 11.0], [87.3, 12.0], [87.4, 12.0], [87.5, 12.0], [87.6, 12.0], [87.7, 12.0], [87.8, 12.0], [87.9, 12.0], [88.0, 12.0], [88.1, 12.0], [88.2, 12.0], [88.3, 12.0], [88.4, 12.0], [88.5, 13.0], [88.6, 13.0], [88.7, 13.0], [88.8, 13.0], [88.9, 13.0], [89.0, 13.0], [89.1, 13.0], [89.2, 13.0], [89.3, 14.0], [89.4, 14.0], [89.5, 14.0], [89.6, 14.0], [89.7, 14.0], [89.8, 14.0], [89.9, 15.0], [90.0, 15.0], [90.1, 15.0], [90.2, 15.0], [90.3, 16.0], [90.4, 16.0], [90.5, 16.0], [90.6, 17.0], [90.7, 17.0], [90.8, 17.0], [90.9, 18.0], [91.0, 18.0], [91.1, 19.0], [91.2, 19.0], [91.3, 20.0], [91.4, 21.0], [91.5, 21.0], [91.6, 22.0], [91.7, 23.0], [91.8, 24.0], [91.9, 25.0], [92.0, 26.0], [92.1, 27.0], [92.2, 28.0], [92.3, 29.0], [92.4, 30.0], [92.5, 32.0], [92.6, 33.0], [92.7, 35.0], [92.8, 36.0], [92.9, 38.0], [93.0, 40.0], [93.1, 41.0], [93.2, 42.0], [93.3, 44.0], [93.4, 46.0], [93.5, 47.0], [93.6, 48.0], [93.7, 48.0], [93.8, 48.0], [93.9, 49.0], [94.0, 49.0], [94.1, 50.0], [94.2, 50.0], [94.3, 51.0], [94.4, 52.0], [94.5, 53.0], [94.6, 54.0], [94.7, 55.0], [94.8, 57.0], [94.9, 58.0], [95.0, 59.0], [95.1, 61.0], [95.2, 62.0], [95.3, 64.0], [95.4, 65.0], [95.5, 67.0], [95.6, 69.0], [95.7, 70.0], [95.8, 72.0], [95.9, 74.0], [96.0, 75.0], [96.1, 77.0], [96.2, 79.0], [96.3, 81.0], [96.4, 83.0], [96.5, 85.0], [96.6, 86.0], [96.7, 88.0], [96.8, 90.0], [96.9, 92.0], [97.0, 94.0], [97.1, 96.0], [97.2, 98.0], [97.3, 100.0], [97.4, 102.0], [97.5, 104.0], [97.6, 106.0], [97.7, 108.0], [97.8, 111.0], [97.9, 113.0], [98.0, 115.0], [98.1, 117.0], [98.2, 119.0], [98.3, 121.0], [98.4, 123.0], [98.5, 124.0], [98.6, 126.0], [98.7, 127.0], [98.8, 130.0], [98.9, 133.0], [99.0, 137.0], [99.1, 143.0], [99.2, 153.0], [99.3, 170.0], [99.4, 193.0], [99.5, 224.0], [99.6, 253.0], [99.7, 308.0], [99.8, 377.0], [99.9, 793.0]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[0.0, 2.0], [0.1, 2.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 3.0], [1.9, 3.0], [2.0, 3.0], [2.1, 3.0], [2.2, 3.0], [2.3, 3.0], [2.4, 3.0], [2.5, 3.0], [2.6, 3.0], [2.7, 3.0], [2.8, 3.0], [2.9, 3.0], [3.0, 3.0], [3.1, 3.0], [3.2, 3.0], [3.3, 3.0], [3.4, 3.0], [3.5, 3.0], [3.6, 3.0], [3.7, 3.0], [3.8, 3.0], [3.9, 3.0], [4.0, 3.0], [4.1, 3.0], [4.2, 3.0], [4.3, 3.0], [4.4, 3.0], [4.5, 3.0], [4.6, 3.0], [4.7, 3.0], [4.8, 3.0], [4.9, 3.0], [5.0, 3.0], [5.1, 3.0], [5.2, 3.0], [5.3, 3.0], [5.4, 3.0], [5.5, 3.0], [5.6, 3.0], [5.7, 3.0], [5.8, 3.0], [5.9, 3.0], [6.0, 3.0], [6.1, 3.0], [6.2, 3.0], [6.3, 3.0], [6.4, 3.0], [6.5, 3.0], [6.6, 3.0], [6.7, 3.0], [6.8, 3.0], [6.9, 3.0], [7.0, 3.0], [7.1, 3.0], [7.2, 3.0], [7.3, 3.0], [7.4, 3.0], [7.5, 3.0], [7.6, 3.0], [7.7, 3.0], [7.8, 3.0], [7.9, 3.0], [8.0, 3.0], [8.1, 3.0], [8.2, 3.0], [8.3, 3.0], [8.4, 3.0], [8.5, 3.0], [8.6, 3.0], [8.7, 3.0], [8.8, 3.0], [8.9, 3.0], [9.0, 3.0], [9.1, 3.0], [9.2, 3.0], [9.3, 3.0], [9.4, 3.0], [9.5, 3.0], [9.6, 3.0], [9.7, 3.0], [9.8, 3.0], [9.9, 3.0], [10.0, 3.0], [10.1, 3.0], [10.2, 3.0], [10.3, 3.0], [10.4, 3.0], [10.5, 3.0], [10.6, 3.0], [10.7, 3.0], [10.8, 3.0], [10.9, 3.0], [11.0, 3.0], [11.1, 3.0], [11.2, 3.0], [11.3, 3.0], [11.4, 3.0], [11.5, 3.0], [11.6, 3.0], [11.7, 3.0], [11.8, 3.0], [11.9, 3.0], [12.0, 3.0], [12.1, 3.0], [12.2, 3.0], [12.3, 3.0], [12.4, 3.0], [12.5, 3.0], [12.6, 3.0], [12.7, 3.0], [12.8, 3.0], [12.9, 3.0], [13.0, 3.0], [13.1, 3.0], [13.2, 3.0], [13.3, 3.0], [13.4, 3.0], [13.5, 3.0], [13.6, 3.0], [13.7, 3.0], [13.8, 3.0], [13.9, 3.0], [14.0, 3.0], [14.1, 3.0], [14.2, 3.0], [14.3, 3.0], [14.4, 3.0], [14.5, 3.0], [14.6, 3.0], [14.7, 3.0], [14.8, 3.0], [14.9, 3.0], [15.0, 3.0], [15.1, 3.0], [15.2, 3.0], [15.3, 3.0], [15.4, 3.0], [15.5, 3.0], [15.6, 3.0], [15.7, 3.0], [15.8, 3.0], [15.9, 3.0], [16.0, 3.0], [16.1, 3.0], [16.2, 3.0], [16.3, 3.0], [16.4, 3.0], [16.5, 3.0], [16.6, 3.0], [16.7, 3.0], [16.8, 3.0], [16.9, 3.0], [17.0, 3.0], [17.1, 3.0], [17.2, 3.0], [17.3, 3.0], [17.4, 3.0], [17.5, 3.0], [17.6, 3.0], [17.7, 3.0], [17.8, 3.0], [17.9, 3.0], [18.0, 3.0], [18.1, 3.0], [18.2, 3.0], [18.3, 3.0], [18.4, 3.0], [18.5, 3.0], [18.6, 3.0], [18.7, 3.0], [18.8, 3.0], [18.9, 3.0], [19.0, 3.0], [19.1, 3.0], [19.2, 3.0], [19.3, 3.0], [19.4, 3.0], [19.5, 3.0], [19.6, 3.0], [19.7, 3.0], [19.8, 3.0], [19.9, 3.0], [20.0, 3.0], [20.1, 3.0], [20.2, 3.0], [20.3, 3.0], [20.4, 3.0], [20.5, 3.0], [20.6, 3.0], [20.7, 3.0], [20.8, 3.0], [20.9, 3.0], [21.0, 3.0], [21.1, 3.0], [21.2, 3.0], [21.3, 3.0], [21.4, 3.0], [21.5, 3.0], [21.6, 3.0], [21.7, 3.0], [21.8, 3.0], [21.9, 3.0], [22.0, 3.0], [22.1, 3.0], [22.2, 3.0], [22.3, 3.0], [22.4, 3.0], [22.5, 3.0], [22.6, 3.0], [22.7, 3.0], [22.8, 3.0], [22.9, 3.0], [23.0, 3.0], [23.1, 3.0], [23.2, 3.0], [23.3, 3.0], [23.4, 3.0], [23.5, 3.0], [23.6, 3.0], [23.7, 3.0], [23.8, 3.0], [23.9, 3.0], [24.0, 3.0], [24.1, 3.0], [24.2, 3.0], [24.3, 3.0], [24.4, 3.0], [24.5, 3.0], [24.6, 3.0], [24.7, 3.0], [24.8, 3.0], [24.9, 3.0], [25.0, 3.0], [25.1, 3.0], [25.2, 3.0], [25.3, 3.0], [25.4, 3.0], [25.5, 3.0], [25.6, 3.0], [25.7, 3.0], [25.8, 3.0], [25.9, 3.0], [26.0, 3.0], [26.1, 3.0], [26.2, 3.0], [26.3, 3.0], [26.4, 3.0], [26.5, 3.0], [26.6, 3.0], [26.7, 3.0], [26.8, 3.0], [26.9, 3.0], [27.0, 3.0], [27.1, 3.0], [27.2, 4.0], [27.3, 4.0], [27.4, 4.0], [27.5, 4.0], [27.6, 4.0], [27.7, 4.0], [27.8, 4.0], [27.9, 4.0], [28.0, 4.0], [28.1, 4.0], [28.2, 4.0], [28.3, 4.0], [28.4, 4.0], [28.5, 4.0], [28.6, 4.0], [28.7, 4.0], [28.8, 4.0], [28.9, 4.0], [29.0, 4.0], [29.1, 4.0], [29.2, 4.0], [29.3, 4.0], [29.4, 4.0], [29.5, 4.0], [29.6, 4.0], [29.7, 4.0], [29.8, 4.0], [29.9, 4.0], [30.0, 4.0], [30.1, 4.0], [30.2, 4.0], [30.3, 4.0], [30.4, 4.0], [30.5, 4.0], [30.6, 4.0], [30.7, 4.0], [30.8, 4.0], [30.9, 4.0], [31.0, 4.0], [31.1, 4.0], [31.2, 4.0], [31.3, 4.0], [31.4, 4.0], [31.5, 4.0], [31.6, 4.0], [31.7, 4.0], [31.8, 4.0], [31.9, 4.0], [32.0, 4.0], [32.1, 4.0], [32.2, 4.0], [32.3, 4.0], [32.4, 4.0], [32.5, 4.0], [32.6, 4.0], [32.7, 4.0], [32.8, 4.0], [32.9, 4.0], [33.0, 4.0], [33.1, 4.0], [33.2, 4.0], [33.3, 4.0], [33.4, 4.0], [33.5, 4.0], [33.6, 4.0], [33.7, 4.0], [33.8, 4.0], [33.9, 4.0], [34.0, 4.0], [34.1, 4.0], [34.2, 4.0], [34.3, 4.0], [34.4, 4.0], [34.5, 4.0], [34.6, 4.0], [34.7, 4.0], [34.8, 4.0], [34.9, 4.0], [35.0, 4.0], [35.1, 4.0], [35.2, 4.0], [35.3, 4.0], [35.4, 4.0], [35.5, 4.0], [35.6, 4.0], [35.7, 4.0], [35.8, 4.0], [35.9, 4.0], [36.0, 4.0], [36.1, 4.0], [36.2, 4.0], [36.3, 4.0], [36.4, 4.0], [36.5, 4.0], [36.6, 4.0], [36.7, 4.0], [36.8, 4.0], [36.9, 4.0], [37.0, 4.0], [37.1, 4.0], [37.2, 4.0], [37.3, 4.0], [37.4, 4.0], [37.5, 4.0], [37.6, 4.0], [37.7, 4.0], [37.8, 4.0], [37.9, 4.0], [38.0, 4.0], [38.1, 4.0], [38.2, 4.0], [38.3, 4.0], [38.4, 4.0], [38.5, 4.0], [38.6, 4.0], [38.7, 4.0], [38.8, 4.0], [38.9, 4.0], [39.0, 4.0], [39.1, 4.0], [39.2, 4.0], [39.3, 4.0], [39.4, 4.0], [39.5, 4.0], [39.6, 4.0], [39.7, 4.0], [39.8, 4.0], [39.9, 4.0], [40.0, 4.0], [40.1, 4.0], [40.2, 4.0], [40.3, 4.0], [40.4, 4.0], [40.5, 4.0], [40.6, 4.0], [40.7, 4.0], [40.8, 4.0], [40.9, 4.0], [41.0, 4.0], [41.1, 4.0], [41.2, 4.0], [41.3, 4.0], [41.4, 4.0], [41.5, 4.0], [41.6, 4.0], [41.7, 4.0], [41.8, 4.0], [41.9, 4.0], [42.0, 4.0], [42.1, 4.0], [42.2, 4.0], [42.3, 4.0], [42.4, 4.0], [42.5, 4.0], [42.6, 4.0], [42.7, 4.0], [42.8, 4.0], [42.9, 4.0], [43.0, 4.0], [43.1, 4.0], [43.2, 4.0], [43.3, 4.0], [43.4, 4.0], [43.5, 4.0], [43.6, 4.0], [43.7, 4.0], [43.8, 4.0], [43.9, 4.0], [44.0, 4.0], [44.1, 4.0], [44.2, 4.0], [44.3, 4.0], [44.4, 4.0], [44.5, 4.0], [44.6, 4.0], [44.7, 4.0], [44.8, 4.0], [44.9, 4.0], [45.0, 4.0], [45.1, 4.0], [45.2, 4.0], [45.3, 4.0], [45.4, 4.0], [45.5, 4.0], [45.6, 4.0], [45.7, 4.0], [45.8, 4.0], [45.9, 4.0], [46.0, 4.0], [46.1, 4.0], [46.2, 4.0], [46.3, 4.0], [46.4, 4.0], [46.5, 4.0], [46.6, 4.0], [46.7, 4.0], [46.8, 4.0], [46.9, 4.0], [47.0, 4.0], [47.1, 4.0], [47.2, 4.0], [47.3, 4.0], [47.4, 4.0], [47.5, 4.0], [47.6, 4.0], [47.7, 4.0], [47.8, 4.0], [47.9, 4.0], [48.0, 4.0], [48.1, 4.0], [48.2, 4.0], [48.3, 4.0], [48.4, 4.0], [48.5, 4.0], [48.6, 4.0], [48.7, 4.0], [48.8, 4.0], [48.9, 4.0], [49.0, 4.0], [49.1, 4.0], [49.2, 4.0], [49.3, 4.0], [49.4, 4.0], [49.5, 4.0], [49.6, 4.0], [49.7, 4.0], [49.8, 4.0], [49.9, 4.0], [50.0, 4.0], [50.1, 4.0], [50.2, 4.0], [50.3, 4.0], [50.4, 4.0], [50.5, 4.0], [50.6, 4.0], [50.7, 4.0], [50.8, 4.0], [50.9, 4.0], [51.0, 4.0], [51.1, 4.0], [51.2, 4.0], [51.3, 4.0], [51.4, 4.0], [51.5, 4.0], [51.6, 4.0], [51.7, 4.0], [51.8, 4.0], [51.9, 4.0], [52.0, 4.0], [52.1, 4.0], [52.2, 4.0], [52.3, 4.0], [52.4, 4.0], [52.5, 4.0], [52.6, 4.0], [52.7, 4.0], [52.8, 4.0], [52.9, 4.0], [53.0, 4.0], [53.1, 4.0], [53.2, 4.0], [53.3, 4.0], [53.4, 4.0], [53.5, 4.0], [53.6, 4.0], [53.7, 4.0], [53.8, 4.0], [53.9, 4.0], [54.0, 4.0], [54.1, 4.0], [54.2, 4.0], [54.3, 4.0], [54.4, 4.0], [54.5, 4.0], [54.6, 4.0], [54.7, 4.0], [54.8, 4.0], [54.9, 4.0], [55.0, 4.0], [55.1, 4.0], [55.2, 4.0], [55.3, 4.0], [55.4, 4.0], [55.5, 4.0], [55.6, 4.0], [55.7, 4.0], [55.8, 4.0], [55.9, 4.0], [56.0, 4.0], [56.1, 4.0], [56.2, 4.0], [56.3, 4.0], [56.4, 4.0], [56.5, 4.0], [56.6, 4.0], [56.7, 4.0], [56.8, 4.0], [56.9, 4.0], [57.0, 4.0], [57.1, 4.0], [57.2, 4.0], [57.3, 4.0], [57.4, 4.0], [57.5, 4.0], [57.6, 4.0], [57.7, 4.0], [57.8, 4.0], [57.9, 4.0], [58.0, 4.0], [58.1, 4.0], [58.2, 4.0], [58.3, 4.0], [58.4, 4.0], [58.5, 4.0], [58.6, 4.0], [58.7, 4.0], [58.8, 4.0], [58.9, 4.0], [59.0, 4.0], [59.1, 4.0], [59.2, 4.0], [59.3, 4.0], [59.4, 4.0], [59.5, 4.0], [59.6, 4.0], [59.7, 4.0], [59.8, 4.0], [59.9, 4.0], [60.0, 4.0], [60.1, 4.0], [60.2, 4.0], [60.3, 4.0], [60.4, 4.0], [60.5, 4.0], [60.6, 4.0], [60.7, 4.0], [60.8, 4.0], [60.9, 4.0], [61.0, 4.0], [61.1, 4.0], [61.2, 4.0], [61.3, 4.0], [61.4, 4.0], [61.5, 4.0], [61.6, 4.0], [61.7, 4.0], [61.8, 4.0], [61.9, 4.0], [62.0, 5.0], [62.1, 5.0], [62.2, 5.0], [62.3, 5.0], [62.4, 5.0], [62.5, 5.0], [62.6, 5.0], [62.7, 5.0], [62.8, 5.0], [62.9, 5.0], [63.0, 5.0], [63.1, 5.0], [63.2, 5.0], [63.3, 5.0], [63.4, 5.0], [63.5, 5.0], [63.6, 5.0], [63.7, 5.0], [63.8, 5.0], [63.9, 5.0], [64.0, 5.0], [64.1, 5.0], [64.2, 5.0], [64.3, 5.0], [64.4, 5.0], [64.5, 5.0], [64.6, 5.0], [64.7, 5.0], [64.8, 5.0], [64.9, 5.0], [65.0, 5.0], [65.1, 5.0], [65.2, 5.0], [65.3, 5.0], [65.4, 5.0], [65.5, 5.0], [65.6, 5.0], [65.7, 5.0], [65.8, 5.0], [65.9, 5.0], [66.0, 5.0], [66.1, 5.0], [66.2, 5.0], [66.3, 5.0], [66.4, 5.0], [66.5, 5.0], [66.6, 5.0], [66.7, 5.0], [66.8, 5.0], [66.9, 5.0], [67.0, 5.0], [67.1, 5.0], [67.2, 5.0], [67.3, 5.0], [67.4, 5.0], [67.5, 5.0], [67.6, 5.0], [67.7, 5.0], [67.8, 5.0], [67.9, 5.0], [68.0, 5.0], [68.1, 5.0], [68.2, 5.0], [68.3, 5.0], [68.4, 5.0], [68.5, 5.0], [68.6, 5.0], [68.7, 5.0], [68.8, 5.0], [68.9, 5.0], [69.0, 5.0], [69.1, 5.0], [69.2, 5.0], [69.3, 5.0], [69.4, 5.0], [69.5, 5.0], [69.6, 5.0], [69.7, 5.0], [69.8, 5.0], [69.9, 5.0], [70.0, 5.0], [70.1, 5.0], [70.2, 5.0], [70.3, 5.0], [70.4, 5.0], [70.5, 5.0], [70.6, 5.0], [70.7, 5.0], [70.8, 5.0], [70.9, 5.0], [71.0, 5.0], [71.1, 5.0], [71.2, 5.0], [71.3, 5.0], [71.4, 5.0], [71.5, 5.0], [71.6, 5.0], [71.7, 5.0], [71.8, 5.0], [71.9, 5.0], [72.0, 5.0], [72.1, 5.0], [72.2, 5.0], [72.3, 5.0], [72.4, 5.0], [72.5, 5.0], [72.6, 5.0], [72.7, 5.0], [72.8, 5.0], [72.9, 5.0], [73.0, 5.0], [73.1, 5.0], [73.2, 5.0], [73.3, 5.0], [73.4, 5.0], [73.5, 5.0], [73.6, 5.0], [73.7, 5.0], [73.8, 5.0], [73.9, 5.0], [74.0, 5.0], [74.1, 5.0], [74.2, 5.0], [74.3, 5.0], [74.4, 5.0], [74.5, 5.0], [74.6, 5.0], [74.7, 5.0], [74.8, 5.0], [74.9, 5.0], [75.0, 5.0], [75.1, 5.0], [75.2, 5.0], [75.3, 5.0], [75.4, 5.0], [75.5, 5.0], [75.6, 5.0], [75.7, 5.0], [75.8, 5.0], [75.9, 5.0], [76.0, 5.0], [76.1, 5.0], [76.2, 5.0], [76.3, 5.0], [76.4, 5.0], [76.5, 5.0], [76.6, 5.0], [76.7, 5.0], [76.8, 5.0], [76.9, 5.0], [77.0, 5.0], [77.1, 5.0], [77.2, 5.0], [77.3, 5.0], [77.4, 5.0], [77.5, 5.0], [77.6, 5.0], [77.7, 5.0], [77.8, 5.0], [77.9, 5.0], [78.0, 5.0], [78.1, 5.0], [78.2, 5.0], [78.3, 5.0], [78.4, 5.0], [78.5, 5.0], [78.6, 5.0], [78.7, 5.0], [78.8, 5.0], [78.9, 5.0], [79.0, 5.0], [79.1, 5.0], [79.2, 5.0], [79.3, 5.0], [79.4, 5.0], [79.5, 5.0], [79.6, 5.0], [79.7, 6.0], [79.8, 6.0], [79.9, 6.0], [80.0, 6.0], [80.1, 6.0], [80.2, 6.0], [80.3, 6.0], [80.4, 6.0], [80.5, 6.0], [80.6, 6.0], [80.7, 6.0], [80.8, 6.0], [80.9, 6.0], [81.0, 6.0], [81.1, 6.0], [81.2, 6.0], [81.3, 6.0], [81.4, 6.0], [81.5, 6.0], [81.6, 6.0], [81.7, 6.0], [81.8, 6.0], [81.9, 6.0], [82.0, 6.0], [82.1, 6.0], [82.2, 6.0], [82.3, 6.0], [82.4, 6.0], [82.5, 6.0], [82.6, 6.0], [82.7, 6.0], [82.8, 6.0], [82.9, 6.0], [83.0, 6.0], [83.1, 6.0], [83.2, 6.0], [83.3, 6.0], [83.4, 6.0], [83.5, 6.0], [83.6, 6.0], [83.7, 6.0], [83.8, 6.0], [83.9, 6.0], [84.0, 6.0], [84.1, 6.0], [84.2, 6.0], [84.3, 6.0], [84.4, 6.0], [84.5, 6.0], [84.6, 6.0], [84.7, 6.0], [84.8, 6.0], [84.9, 6.0], [85.0, 6.0], [85.1, 6.0], [85.2, 6.0], [85.3, 6.0], [85.4, 6.0], [85.5, 6.0], [85.6, 6.0], [85.7, 6.0], [85.8, 6.0], [85.9, 6.0], [86.0, 6.0], [86.1, 6.0], [86.2, 6.0], [86.3, 7.0], [86.4, 7.0], [86.5, 7.0], [86.6, 7.0], [86.7, 7.0], [86.8, 7.0], [86.9, 7.0], [87.0, 7.0], [87.1, 7.0], [87.2, 7.0], [87.3, 7.0], [87.4, 7.0], [87.5, 7.0], [87.6, 7.0], [87.7, 7.0], [87.8, 7.0], [87.9, 7.0], [88.0, 7.0], [88.1, 7.0], [88.2, 7.0], [88.3, 7.0], [88.4, 7.0], [88.5, 7.0], [88.6, 7.0], [88.7, 7.0], [88.8, 7.0], [88.9, 7.0], [89.0, 7.0], [89.1, 7.0], [89.2, 8.0], [89.3, 8.0], [89.4, 8.0], [89.5, 8.0], [89.6, 8.0], [89.7, 8.0], [89.8, 8.0], [89.9, 8.0], [90.0, 8.0], [90.1, 8.0], [90.2, 8.0], [90.3, 8.0], [90.4, 8.0], [90.5, 9.0], [90.6, 9.0], [90.7, 9.0], [90.8, 9.0], [90.9, 9.0], [91.0, 9.0], [91.1, 9.0], [91.2, 10.0], [91.3, 10.0], [91.4, 10.0], [91.5, 10.0], [91.6, 10.0], [91.7, 11.0], [91.8, 11.0], [91.9, 11.0], [92.0, 12.0], [92.1, 12.0], [92.2, 12.0], [92.3, 13.0], [92.4, 13.0], [92.5, 14.0], [92.6, 15.0], [92.7, 15.0], [92.8, 16.0], [92.9, 17.0], [93.0, 17.0], [93.1, 18.0], [93.2, 19.0], [93.3, 20.0], [93.4, 21.0], [93.5, 22.0], [93.6, 23.0], [93.7, 25.0], [93.8, 26.0], [93.9, 27.0], [94.0, 28.0], [94.1, 29.0], [94.2, 30.0], [94.3, 31.0], [94.4, 33.0], [94.5, 34.0], [94.6, 35.0], [94.7, 36.0], [94.8, 38.0], [94.9, 39.0], [95.0, 41.0], [95.1, 42.0], [95.2, 44.0], [95.3, 45.0], [95.4, 47.0], [95.5, 49.0], [95.6, 50.0], [95.7, 52.0], [95.8, 54.0], [95.9, 56.0], [96.0, 58.0], [96.1, 60.0], [96.2, 62.0], [96.3, 64.0], [96.4, 66.0], [96.5, 68.0], [96.6, 70.0], [96.7, 73.0], [96.8, 75.0], [96.9, 77.0], [97.0, 79.0], [97.1, 81.0], [97.2, 83.0], [97.3, 86.0], [97.4, 88.0], [97.5, 90.0], [97.6, 92.0], [97.7, 94.0], [97.8, 97.0], [97.9, 99.0], [98.0, 102.0], [98.1, 104.0], [98.2, 107.0], [98.3, 109.0], [98.4, 111.0], [98.5, 113.0], [98.6, 116.0], [98.7, 118.0], [98.8, 120.0], [98.9, 121.0], [99.0, 123.0], [99.1, 125.0], [99.2, 128.0], [99.3, 131.0], [99.4, 137.0], [99.5, 147.0], [99.6, 171.0], [99.7, 209.0], [99.8, 274.0], [99.9, 355.0], [100.0, 4815.0]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 218014.0, "series": [{"data": [[0.0, 216630.0], [600.0, 21.0], [700.0, 25.0], [3000.0, 20.0], [3100.0, 1.0], [200.0, 598.0], [800.0, 36.0], [900.0, 13.0], [1000.0, 91.0], [1100.0, 44.0], [300.0, 303.0], [1200.0, 4.0], [1300.0, 4.0], [1400.0, 2.0], [1500.0, 1.0], [100.0, 4775.0], [400.0, 102.0], [1900.0, 1.0], [500.0, 30.0]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[0.0, 218014.0], [600.0, 12.0], [700.0, 7.0], [200.0, 347.0], [800.0, 8.0], [900.0, 3.0], [1000.0, 3.0], [1100.0, 2.0], [300.0, 203.0], [4800.0, 1.0], [100.0, 3937.0], [400.0, 90.0], [1600.0, 2.0], [1700.0, 2.0], [500.0, 34.0]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 444999.0, "series": [{"data": [[0.0, 444999.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 339.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 27.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 1.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 8.852459016393443, "minX": 1.57072152E12, "maxY": 60.0, "series": [{"data": [[1.57072272E12, 60.0], [1.57072434E12, 60.0], [1.57072374E12, 60.0], [1.57072212E12, 60.0], [1.57072152E12, 8.852459016393443], [1.57072314E12, 60.0], [1.57072254E12, 60.0], [1.57072476E12, 60.0], [1.57072494E12, 60.0], [1.5707229E12, 60.0], [1.5707223E12, 60.0], [1.57072452E12, 60.0], [1.5707217E12, 60.0], [1.57072392E12, 60.0], [1.57072332E12, 60.0], [1.57072512E12, 59.97878578820283], [1.57072338E12, 60.0], [1.57072176E12, 60.0], [1.57072278E12, 60.0], [1.57072218E12, 60.0], [1.5707244E12, 60.0], [1.570725E12, 60.0], [1.57072158E12, 47.22364941443138], [1.5707238E12, 60.0], [1.57072194E12, 60.0], [1.57072416E12, 60.0], [1.57072356E12, 60.0], [1.57072296E12, 60.0], [1.57072458E12, 60.0], [1.57072236E12, 60.0], [1.57072398E12, 60.0], [1.57072242E12, 60.0], [1.57072464E12, 60.0], [1.57072506E12, 60.0], [1.57072182E12, 60.0], [1.57072404E12, 60.0], [1.57072344E12, 60.0], [1.57072284E12, 60.0], [1.57072446E12, 60.0], [1.5707232E12, 60.0], [1.57072482E12, 60.0], [1.5707226E12, 60.0], [1.57072422E12, 60.0], [1.57072362E12, 60.0], [1.570722E12, 60.0], [1.57072302E12, 60.0], [1.57072368E12, 60.0], [1.57072308E12, 60.0], [1.5707247E12, 60.0], [1.57072248E12, 60.0], [1.5707241E12, 60.0], [1.5707235E12, 60.0], [1.57072188E12, 60.0], [1.57072224E12, 60.0], [1.57072386E12, 60.0], [1.57072164E12, 60.0], [1.57072326E12, 60.0], [1.57072266E12, 60.0], [1.57072488E12, 60.0], [1.57072206E12, 60.0], [1.57072428E12, 60.0]], "isOverall": false, "label": "PruebaLogin", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57072512E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 3.92, "minX": 1.0, "maxY": 86.0, "series": [{"data": [[2.0, 64.33333333333333], [3.0, 18.666666666666668], [4.0, 12.8], [5.0, 20.333333333333336], [6.0, 12.857142857142858], [7.0, 26.6], [8.0, 13.333333333333334], [9.0, 14.333333333333334], [10.0, 21.9], [11.0, 13.999999999999998], [12.0, 16.615384615384613], [13.0, 15.416666666666668], [14.0, 17.214285714285715], [15.0, 9.3125], [16.0, 8.533333333333333], [17.0, 18.9], [18.0, 9.043478260869565], [19.0, 9.954545454545457], [20.0, 12.5], [21.0, 11.444444444444445], [22.0, 49.239999999999995], [23.0, 9.041666666666666], [24.0, 31.07692307692307], [25.0, 7.161290322580647], [26.0, 9.700000000000001], [27.0, 11.966666666666665], [28.0, 8.444444444444448], [29.0, 7.827586206896552], [30.0, 8.636363636363642], [31.0, 7.96969696969697], [32.0, 12.676470588235292], [33.0, 6.677419354838711], [34.0, 8.193548387096776], [35.0, 6.7027027027027035], [36.0, 9.609756097560973], [37.0, 7.3243243243243255], [38.0, 8.076923076923073], [39.0, 8.229166666666668], [40.0, 6.977777777777778], [41.0, 10.659574468085106], [42.0, 11.478260869565215], [43.0, 7.893617021276598], [44.0, 6.83720930232558], [45.0, 6.888888888888888], [46.0, 8.440000000000001], [47.0, 7.274509803921568], [48.0, 40.17391304347826], [49.0, 58.18749999999999], [50.0, 44.25490196078431], [51.0, 23.59999999999999], [52.0, 7.403508771929824], [53.0, 12.23076923076923], [54.0, 7.836363636363637], [55.0, 9.12328767123288], [56.0, 8.709677419354835], [57.0, 9.499999999999998], [58.0, 14.033898305084742], [59.0, 11.041666666666673], [60.0, 15.340310389957253], [1.0, 13.0]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[59.82513774073775, 15.328328117072015]], "isOverall": false, "label": "HomePage-Aggregated", "isController": false}, {"data": [[2.0, 8.0], [3.0, 31.5], [4.0, 7.333333333333333], [5.0, 8.666666666666666], [6.0, 14.8], [7.0, 10.857142857142858], [8.0, 8.0], [9.0, 13.111111111111112], [10.0, 9.333333333333334], [11.0, 9.333333333333334], [12.0, 9.900000000000002], [13.0, 6.571428571428571], [14.0, 10.399999999999999], [15.0, 5.384615384615384], [16.0, 6.562499999999999], [17.0, 8.65], [18.0, 6.1], [19.0, 11.038461538461538], [20.0, 6.823529411764706], [21.0, 6.222222222222221], [22.0, 38.13636363636364], [23.0, 5.481481481481482], [24.0, 16.814814814814817], [25.0, 4.13793103448276], [26.0, 5.322580645161289], [27.0, 9.115384615384613], [28.0, 4.8484848484848495], [29.0, 4.677419354838709], [30.0, 4.617647058823529], [31.0, 4.969696969696971], [32.0, 4.9333333333333345], [33.0, 4.28125], [34.0, 3.92], [35.0, 3.933333333333336], [36.0, 4.800000000000001], [37.0, 4.904761904761904], [38.0, 5.135135135135135], [39.0, 4.560975609756099], [40.0, 4.057692307692306], [41.0, 5.816326530612245], [42.0, 4.243902439024391], [43.0, 4.040000000000001], [44.0, 4.052631578947368], [45.0, 4.9318181818181825], [46.0, 4.862745098039215], [47.0, 5.096153846153847], [48.0, 50.82978723404255], [49.0, 60.6511627906977], [50.0, 56.56603773584908], [51.0, 19.188679245283016], [52.0, 4.526315789473685], [53.0, 6.5217391304347805], [54.0, 4.136363636363636], [55.0, 5.484848484848482], [56.0, 5.935483870967743], [57.0, 5.416666666666667], [58.0, 7.072727272727273], [59.0, 6.328125000000002], [60.0, 9.918542404507091], [1.0, 86.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[59.82853614173816, 9.923225473244528]], "isOverall": false, "label": "Login-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 60.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1220.8, "minX": 1.57072152E12, "maxY": 126070.25, "series": [{"data": [[1.57072272E12, 123040.6], [1.57072434E12, 122769.0], [1.57072374E12, 121846.06666666667], [1.57072212E12, 121785.35], [1.57072152E12, 3062.9], [1.57072314E12, 122731.65], [1.57072254E12, 123780.38333333333], [1.57072476E12, 124075.45], [1.57072494E12, 122356.7], [1.5707229E12, 123026.45], [1.5707223E12, 122352.43333333333], [1.57072452E12, 123639.96666666666], [1.5707217E12, 121612.13333333333], [1.57072392E12, 120310.2], [1.57072332E12, 121560.63333333333], [1.57072512E12, 95059.86666666667], [1.57072338E12, 123593.13333333333], [1.57072176E12, 121528.1], [1.57072278E12, 125349.08333333333], [1.57072218E12, 121729.38333333333], [1.5707244E12, 122984.11666666667], [1.570725E12, 122192.88333333333], [1.57072158E12, 86940.31666666667], [1.5707238E12, 122235.0], [1.57072194E12, 125091.9], [1.57072416E12, 119945.1], [1.57072356E12, 123162.38333333333], [1.57072296E12, 124562.66666666667], [1.57072458E12, 123054.95], [1.57072236E12, 122258.41666666667], [1.57072398E12, 115988.11666666667], [1.57072242E12, 122553.41666666667], [1.57072464E12, 123077.63333333333], [1.57072506E12, 123775.83333333333], [1.57072182E12, 124033.1], [1.57072404E12, 122445.73333333334], [1.57072344E12, 123560.21666666666], [1.57072284E12, 121364.0], [1.57072446E12, 122019.58333333333], [1.5707232E12, 123569.36666666667], [1.57072482E12, 125728.83333333333], [1.5707226E12, 121134.78333333334], [1.57072422E12, 117687.98333333334], [1.57072362E12, 123668.21666666666], [1.570722E12, 123770.83333333333], [1.57072302E12, 124848.26666666666], [1.57072368E12, 122675.21666666666], [1.57072308E12, 124613.9], [1.5707247E12, 121799.51666666666], [1.57072248E12, 124318.83333333333], [1.5707241E12, 124000.55], [1.5707235E12, 124539.21666666666], [1.57072188E12, 121546.56666666667], [1.57072224E12, 126070.25], [1.57072386E12, 117983.03333333334], [1.57072164E12, 123667.95], [1.57072326E12, 124009.88333333333], [1.57072266E12, 124562.33333333333], [1.57072488E12, 122646.98333333334], [1.57072206E12, 116728.0], [1.57072428E12, 123988.4]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.57072272E12, 50341.933333333334], [1.57072434E12, 50227.166666666664], [1.57072374E12, 49885.6], [1.57072212E12, 49849.95], [1.57072152E12, 1220.8], [1.57072314E12, 50197.416666666664], [1.57072254E12, 50651.85], [1.57072476E12, 50772.61666666667], [1.57072494E12, 50076.5], [1.5707229E12, 50343.35], [1.5707223E12, 50035.03333333333], [1.57072452E12, 50590.8], [1.5707217E12, 49775.46666666667], [1.57072392E12, 49246.3], [1.57072332E12, 49747.13333333333], [1.57072512E12, 38884.76666666667], [1.57072338E12, 50578.9], [1.57072176E12, 49708.53333333333], [1.57072278E12, 51304.61666666667], [1.57072218E12, 49805.38333333333], [1.5707244E12, 50347.71666666667], [1.570725E12, 50009.51666666667], [1.57072158E12, 35489.95], [1.5707238E12, 50030.36666666667], [1.57072194E12, 51163.26666666667], [1.57072416E12, 49082.46666666667], [1.57072356E12, 50388.15], [1.57072296E12, 50957.566666666666], [1.57072458E12, 50315.28333333333], [1.57072236E12, 50036.316666666666], [1.57072398E12, 47441.51666666667], [1.57072242E12, 50157.01666666667], [1.57072464E12, 50396.8], [1.57072506E12, 50635.53333333333], [1.57072182E12, 50776.96666666667], [1.57072404E12, 50109.333333333336], [1.57072344E12, 50565.35], [1.57072284E12, 49666.7], [1.57072446E12, 49934.95], [1.5707232E12, 50598.03333333333], [1.57072482E12, 51416.666666666664], [1.5707226E12, 49547.61666666667], [1.57072422E12, 48147.98333333333], [1.57072362E12, 50587.916666666664], [1.570722E12, 50669.63333333333], [1.57072302E12, 51070.76666666667], [1.57072368E12, 50203.25], [1.57072308E12, 51011.066666666666], [1.5707247E12, 49848.55], [1.57072248E12, 50890.3], [1.5707241E12, 50738.35], [1.5707235E12, 50951.583333333336], [1.57072188E12, 49748.63333333333], [1.57072224E12, 51599.71666666667], [1.57072386E12, 48268.73333333333], [1.57072164E12, 50613.083333333336], [1.57072326E12, 50745.78333333333], [1.57072266E12, 50982.666666666664], [1.57072488E12, 50206.15], [1.57072206E12, 47751.53333333333], [1.57072428E12, 50726.4]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57072512E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 6.062023653088054, "minX": 1.57072152E12, "maxY": 47.169209039548, "series": [{"data": [[1.57072272E12, 11.425679275439506], [1.57072434E12, 14.260277629471355], [1.57072374E12, 12.317092866756404], [1.57072212E12, 11.034194938072165], [1.57072152E12, 18.07291666666666], [1.57072314E12, 13.279498131340098], [1.57072254E12, 12.666048728813536], [1.57072476E12, 16.707793923381768], [1.57072494E12, 14.299303322615206], [1.5707229E12, 15.574207300826009], [1.5707223E12, 11.443373493975928], [1.57072452E12, 10.606574761399788], [1.5707217E12, 19.737665138851476], [1.57072392E12, 24.86563096211508], [1.57072332E12, 14.347357065803651], [1.57072512E12, 24.751809720785932], [1.57072338E12, 10.899734748010623], [1.57072176E12, 10.527905095713118], [1.57072278E12, 11.902955793879153], [1.57072218E12, 11.857027463651045], [1.5707244E12, 11.242933333333353], [1.570725E12, 13.439763885162314], [1.57072158E12, 15.017299736743144], [1.5707238E12, 12.939377682403437], [1.57072194E12, 12.494499738082771], [1.57072416E12, 30.635692812243835], [1.57072356E12, 13.800159659393264], [1.57072296E12, 11.352275716916585], [1.57072458E12, 12.181527814745808], [1.57072236E12, 10.26092786269773], [1.57072398E12, 47.169209039548], [1.57072242E12, 9.775548421615841], [1.57072464E12, 13.33955223880596], [1.57072506E12, 11.921101403230082], [1.57072182E12, 13.513749338974103], [1.57072404E12, 15.581526104417636], [1.57072344E12, 19.473335102149097], [1.57072284E12, 15.96839546191245], [1.57072446E12, 14.907307898979004], [1.5707232E12, 14.149455800371644], [1.57072482E12, 10.89187076602396], [1.5707226E12, 11.992967270760069], [1.57072422E12, 37.257866889445786], [1.57072362E12, 11.185214626391101], [1.570722E12, 12.372284048754645], [1.57072302E12, 10.861679790026248], [1.57072368E12, 10.292357028327086], [1.57072308E12, 9.438947368421033], [1.5707247E12, 13.365006729475105], [1.57072248E12, 11.18438406752833], [1.5707241E12, 15.791964049695975], [1.5707235E12, 16.992631578947375], [1.57072188E12, 13.658214189371481], [1.57072224E12, 10.948504551365417], [1.57072386E12, 35.08722222222232], [1.57072164E12, 11.127253446447497], [1.57072326E12, 12.201163098070298], [1.57072266E12, 12.298236377994238], [1.57072488E12, 13.40347593582887], [1.57072206E12, 41.724031443009636], [1.57072428E12, 13.82676540597728]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[1.57072272E12, 8.456823027718603], [1.57072434E12, 8.688752337697077], [1.57072374E12, 8.314884470714674], [1.57072212E12, 6.937869822485202], [1.57072152E12, 11.597701149425287], [1.57072314E12, 9.67531425514843], [1.57072254E12, 7.4997351694915215], [1.57072476E12, 10.263672391017149], [1.57072494E12, 8.162292447777205], [1.5707229E12, 8.982147615241116], [1.5707223E12, 8.249865807836782], [1.57072452E12, 6.76398833200742], [1.5707217E12, 14.611530172413808], [1.57072392E12, 15.4184590253199], [1.57072332E12, 10.932866001617702], [1.57072512E12, 14.630307214359673], [1.57072338E12, 6.713338636966331], [1.57072176E12, 6.982986767485827], [1.57072278E12, 8.856246732880322], [1.57072218E12, 8.174030172413786], [1.5707244E12, 7.85862619808305], [1.570725E12, 7.568517028694012], [1.57072158E12, 12.081973434535088], [1.5707238E12, 9.454837845081745], [1.57072194E12, 8.40776699029127], [1.57072416E12, 18.16288603443561], [1.57072356E12, 8.668974700399477], [1.57072296E12, 8.251777719252054], [1.57072458E12, 7.897223705285637], [1.57072236E12, 7.094344679710527], [1.57072398E12, 27.61658177702314], [1.57072242E12, 6.704278074866314], [1.57072464E12, 7.970752459452267], [1.57072506E12, 6.777365491651221], [1.57072182E12, 8.978880675818383], [1.57072404E12, 8.650695931477532], [1.57072344E12, 13.502652519893898], [1.57072284E12, 11.210369970294328], [1.57072446E12, 9.907332796132158], [1.5707232E12, 10.307733050847453], [1.57072482E12, 6.552624706189595], [1.5707226E12, 8.181251693308033], [1.57072422E12, 19.264214046822737], [1.57072362E12, 7.480233483682677], [1.570722E12, 9.101058201058182], [1.57072302E12, 7.5203679369250995], [1.57072368E12, 6.556772642265561], [1.57072308E12, 6.062023653088054], [1.5707247E12, 8.364272262577353], [1.57072248E12, 8.177028451001059], [1.5707241E12, 9.758593336858823], [1.5707235E12, 10.372925994205975], [1.57072188E12, 10.334501347708898], [1.57072224E12, 7.178534303534317], [1.57072386E12, 19.40617180984153], [1.57072164E12, 8.084790673025967], [1.57072326E12, 9.332804652392307], [1.57072266E12, 9.001841136244071], [1.57072488E12, 8.230974632843791], [1.57072206E12, 27.950534007869493], [1.57072428E12, 8.135077980438812]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57072512E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 6.056504599211576, "minX": 1.57072152E12, "maxY": 45.84943502824859, "series": [{"data": [[1.57072272E12, 10.80633990410228], [1.57072434E12, 13.327549386011707], [1.57072374E12, 11.511440107671618], [1.57072212E12, 10.194399569197634], [1.57072152E12, 17.09374999999999], [1.57072314E12, 12.520822210357716], [1.57072254E12, 11.798199152542349], [1.57072476E12, 15.755085865257582], [1.57072494E12, 12.91907824222938], [1.5707229E12, 14.780442312816424], [1.5707223E12, 10.744846050870153], [1.57072452E12, 9.851007423117704], [1.5707217E12, 18.9056349420329], [1.57072392E12, 23.782502044153677], [1.57072332E12, 13.640507011866232], [1.57072512E12, 24.10582557738719], [1.57072338E12, 10.177718832891268], [1.57072176E12, 9.773523860878914], [1.57072278E12, 11.131310489144656], [1.57072218E12, 11.18605277329024], [1.5707244E12, 10.531999999999977], [1.570725E12, 12.38663804668635], [1.57072158E12, 14.173749529898444], [1.5707238E12, 12.098175965665257], [1.57072194E12, 11.63462545835516], [1.57072416E12, 29.341350095654608], [1.57072356E12, 13.023682810005331], [1.57072296E12, 10.694554064719828], [1.57072458E12, 11.436784668618598], [1.57072236E12, 9.513274336283187], [1.57072398E12, 45.84943502824859], [1.57072242E12, 9.059122525414667], [1.57072464E12, 12.453091684434982], [1.57072506E12, 11.405877680698937], [1.57072182E12, 12.664727657324125], [1.57072404E12, 14.271485943775058], [1.57072344E12, 18.68877686388963], [1.57072284E12, 15.105348460291703], [1.57072446E12, 13.869962385814091], [1.5707232E12, 13.446774621714923], [1.57072482E12, 9.773058884835857], [1.5707226E12, 11.09385988639435], [1.57072422E12, 36.13505987190195], [1.57072362E12, 10.410969793322716], [1.570722E12, 11.648383677795463], [1.57072302E12, 10.140157480314965], [1.57072368E12, 9.404596472474623], [1.57072308E12, 8.677631578947347], [1.5707247E12, 12.436339165545096], [1.57072248E12, 10.352149828541261], [1.5707241E12, 14.943431139307433], [1.5707235E12, 16.241315789473695], [1.57072188E12, 12.940383059077435], [1.57072224E12, 10.235630689206769], [1.57072386E12, 34.093333333333504], [1.57072164E12, 10.30646871686106], [1.57072326E12, 11.619085381971965], [1.57072266E12, 11.411950513292995], [1.57072488E12, 12.260427807486625], [1.57072206E12, 40.982313307130774], [1.57072428E12, 12.996826236445385]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[1.57072272E12, 8.45229211087419], [1.57072434E12, 8.68634784931874], [1.57072374E12, 8.312466415905408], [1.57072212E12, 6.933297471759014], [1.57072152E12, 11.563218390804595], [1.57072314E12, 9.671837389676417], [1.57072254E12, 7.496027542372853], [1.57072476E12, 10.261822985468928], [1.57072494E12, 8.160417782538845], [1.5707229E12, 8.977884359179322], [1.5707223E12, 8.246913580246906], [1.57072452E12, 6.761071333863728], [1.5707217E12, 14.607489224137918], [1.57072392E12, 15.416553226245522], [1.57072332E12, 10.92936101375034], [1.57072512E12, 14.625819813600287], [1.57072338E12, 6.7101564571731735], [1.57072176E12, 6.978935997839586], [1.57072278E12, 8.853371667537909], [1.57072218E12, 8.170797413793089], [1.5707244E12, 7.854898828540958], [1.570725E12, 7.565567176186638], [1.57072158E12, 12.070588235294133], [1.5707238E12, 9.453765746448704], [1.57072194E12, 8.403831015481508], [1.57072416E12, 18.15960644984967], [1.57072356E12, 8.6652463382157], [1.57072296E12, 8.249670792731115], [1.57072458E12, 7.895088093966881], [1.57072236E12, 7.091932457786116], [1.57072398E12, 27.615166949632147], [1.57072242E12, 6.699732620320847], [1.57072464E12, 7.968093592129761], [1.57072506E12, 6.771004505698373], [1.57072182E12, 8.976504751847907], [1.57072404E12, 8.649089935760163], [1.57072344E12, 13.497347480106113], [1.57072284E12, 11.206049149338343], [1.57072446E12, 9.905452591995674], [1.5707232E12, 10.302436440677996], [1.57072482E12, 6.549490728649765], [1.5707226E12, 8.176645895421306], [1.57072422E12, 19.262263099219606], [1.57072362E12, 7.477314937649236], [1.570722E12, 9.098148148148123], [1.57072302E12, 7.514848883048637], [1.57072368E12, 6.550895004007495], [1.57072308E12, 6.056504599211576], [1.5707247E12, 8.362389023405962], [1.57072248E12, 8.173867228661702], [1.5707241E12, 9.756213643574828], [1.5707235E12, 10.368712141164076], [1.57072188E12, 10.331805929919147], [1.57072224E12, 7.1735966735966565], [1.57072386E12, 19.404503753127592], [1.57072164E12, 8.081346051934291], [1.57072326E12, 9.329368226275461], [1.57072266E12, 8.999210941609691], [1.57072488E12, 8.229906542056082], [1.57072206E12, 27.946318156267637], [1.57072428E12, 6.857520486386465]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57072512E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.57072152E12, "maxY": 25.744917850180993, "series": [{"data": [[1.57072272E12, 5.516782099094312], [1.57072434E12, 7.427122263747999], [1.57072374E12, 5.883176312247639], [1.57072212E12, 5.275713516424349], [1.57072152E12, 7.3125], [1.57072314E12, 7.041911372130262], [1.57072254E12, 6.185911016949178], [1.57072476E12, 10.306737120211382], [1.57072494E12, 5.733386923901394], [1.5707229E12, 8.931787903010918], [1.5707223E12, 5.32074966532799], [1.57072452E12, 4.5803287380699835], [1.5707217E12, 10.519277433270425], [1.57072392E12, 12.667484328154817], [1.57072332E12, 6.904530744336565], [1.57072512E12, 17.25956566701134], [1.57072338E12, 4.539257294429703], [1.57072176E12, 4.0447559989215405], [1.57072278E12, 5.845147789693948], [1.57072218E12, 5.756058158319874], [1.5707244E12, 5.9186666666666525], [1.570725E12, 7.239871210088544], [1.57072158E12, 7.766077472734117], [1.5707238E12, 6.726126609442035], [1.57072194E12, 5.973546359350434], [1.57072416E12, 15.66958185296523], [1.57072356E12, 6.599521021820119], [1.57072296E12, 5.383057090239406], [1.57072458E12, 6.228639872238476], [1.57072236E12, 4.921158487530164], [1.57072398E12, 24.044350282485887], [1.57072242E12, 4.451310861423228], [1.57072464E12, 6.5034648187633275], [1.57072506E12, 4.635954461212604], [1.57072182E12, 6.80274986779482], [1.57072404E12, 6.563855421686735], [1.57072344E12, 10.39586097107988], [1.57072284E12, 8.986493787142065], [1.57072446E12, 7.232133261687279], [1.5707232E12, 7.823997876294129], [1.57072482E12, 4.718082334549234], [1.5707226E12, 6.023532593995136], [1.57072422E12, 25.744917850180993], [1.57072362E12, 5.196343402225743], [1.570722E12, 5.756226815050349], [1.57072302E12, 5.413385826771652], [1.57072368E12, 4.383484767503987], [1.57072308E12, 3.97631578947368], [1.5707247E12, 6.5620457604306806], [1.57072248E12, 4.719599050382489], [1.5707241E12, 7.841924398625402], [1.5707235E12, 10.962105263157916], [1.57072188E12, 6.79066630698676], [1.57072224E12, 4.368010403120945], [1.57072386E12, 20.3133333333334], [1.57072164E12, 4.766436903499463], [1.57072326E12, 5.95056833201163], [1.57072266E12, 5.658594366938658], [1.57072488E12, 6.579411764705886], [1.57072206E12, 24.18725435148799], [1.57072428E12, 8.473155249933859]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[1.57072272E12, 0.0013326226012793166], [1.57072434E12, 8.014961261020581E-4], [1.57072374E12, 5.373455131649666E-4], [1.57072212E12, 0.002151694459386769], [1.57072152E12, 0.0], [1.57072314E12, 0.0013372559507889847], [1.57072254E12, 5.296610169491525E-4], [1.57072476E12, 0.06050198150594436], [1.57072494E12, 0.0], [1.5707229E12, 0.0013322675193178824], [1.5707223E12, 0.0013419216317767063], [1.57072452E12, 0.0021214531954388783], [1.5707217E12, 0.0018857758620689723], [1.57072392E12, 0.032943098284780814], [1.57072332E12, 0.0016176867080075494], [1.57072512E12, 0.08284432171211592], [1.57072338E12, 5.303632988597184E-4], [1.57072176E12, 8.101539292465571E-4], [1.57072278E12, 0.0], [1.57072218E12, 0.022359913793103446], [1.5707244E12, 0.0], [1.570725E12, 0.03620273531777955], [1.57072158E12, 0.0], [1.5707238E12, 0.01527740552130795], [1.57072194E12, 0.0], [1.57072416E12, 0.0024596884394643367], [1.57072356E12, 0.0], [1.57072296E12, 0.0013168290755859878], [1.57072458E12, 0.013614522156967436], [1.57072236E12, 0.014473331546502257], [1.57072398E12, 0.6615732880588571], [1.57072242E12, 0.0237967914438503], [1.57072464E12, 0.0013294336612603048], [1.57072506E12, 0.00477073946461703], [1.57072182E12, 7.919746568109822E-4], [1.57072404E12, 0.001338329764453961], [1.57072344E12, 0.0018567639257294456], [1.57072284E12, 0.0016203078584931159], [1.57072446E12, 0.0013430029546064998], [1.5707232E12, 0.0], [1.57072482E12, 0.0028728127448419977], [1.5707226E12, 0.003251151449471691], [1.57072422E12, 0.040412486064659976], [1.57072362E12, 5.306447333510228E-4], [1.570722E12, 0.001322751322751323], [1.57072302E12, 0.0], [1.57072368E12, 0.0010686615014694118], [1.57072308E12, 0.0015768725361366628], [1.5707247E12, 0.0018832391713747689], [1.57072248E12, 7.903055848261322E-4], [1.5707241E12, 0.028820729772607148], [1.5707235E12, 0.0010534632604687908], [1.57072188E12, 5.390835579514824E-4], [1.57072224E12, 0.0], [1.57072386E12, 0.008062274117319985], [1.57072164E12, 0.00317965023847377], [1.57072326E12, 0.0013217023526301869], [1.57072266E12, 0.001841136244082062], [1.57072488E12, 0.0010680907877169586], [1.57072206E12, 0.16947723440134843], [1.57072428E12, 0.005551149881046814]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57072512E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.57072152E12, "maxY": 3105.0, "series": [{"data": [[1.57072272E12, 350.0], [1.57072434E12, 266.0], [1.57072374E12, 278.0], [1.57072212E12, 269.0], [1.57072152E12, 86.0], [1.57072314E12, 354.0], [1.57072254E12, 1010.0], [1.57072476E12, 1255.0], [1.57072494E12, 243.0], [1.5707229E12, 1113.0], [1.5707223E12, 319.0], [1.57072452E12, 261.0], [1.5707217E12, 526.0], [1.57072392E12, 1131.0], [1.57072332E12, 424.0], [1.57072512E12, 3052.0], [1.57072338E12, 214.0], [1.57072176E12, 247.0], [1.57072278E12, 236.0], [1.57072218E12, 387.0], [1.5707244E12, 194.0], [1.570725E12, 1180.0], [1.57072158E12, 287.0], [1.5707238E12, 1091.0], [1.57072194E12, 1166.0], [1.57072416E12, 1166.0], [1.57072356E12, 369.0], [1.57072296E12, 168.0], [1.57072458E12, 248.0], [1.57072236E12, 300.0], [1.57072398E12, 1960.0], [1.57072242E12, 237.0], [1.57072464E12, 385.0], [1.57072506E12, 424.0], [1.57072182E12, 313.0], [1.57072404E12, 3015.0], [1.57072344E12, 403.0], [1.57072284E12, 365.0], [1.57072446E12, 280.0], [1.5707232E12, 426.0], [1.57072482E12, 349.0], [1.5707226E12, 1166.0], [1.57072422E12, 3012.0], [1.57072362E12, 231.0], [1.570722E12, 278.0], [1.57072302E12, 190.0], [1.57072368E12, 239.0], [1.57072308E12, 150.0], [1.5707247E12, 261.0], [1.57072248E12, 326.0], [1.5707241E12, 827.0], [1.5707235E12, 1134.0], [1.57072188E12, 346.0], [1.57072224E12, 284.0], [1.57072386E12, 3105.0], [1.57072164E12, 220.0], [1.57072326E12, 189.0], [1.57072266E12, 241.0], [1.57072488E12, 1007.0], [1.57072206E12, 1113.0], [1.57072428E12, 3052.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.57072272E12, 2.0], [1.57072434E12, 2.0], [1.57072374E12, 3.0], [1.57072212E12, 2.0], [1.57072152E12, 5.0], [1.57072314E12, 2.0], [1.57072254E12, 2.0], [1.57072476E12, 2.0], [1.57072494E12, 3.0], [1.5707229E12, 2.0], [1.5707223E12, 2.0], [1.57072452E12, 2.0], [1.5707217E12, 2.0], [1.57072392E12, 2.0], [1.57072332E12, 3.0], [1.57072512E12, 2.0], [1.57072338E12, 2.0], [1.57072176E12, 2.0], [1.57072278E12, 2.0], [1.57072218E12, 2.0], [1.5707244E12, 2.0], [1.570725E12, 3.0], [1.57072158E12, 2.0], [1.5707238E12, 3.0], [1.57072194E12, 2.0], [1.57072416E12, 2.0], [1.57072356E12, 3.0], [1.57072296E12, 2.0], [1.57072458E12, 2.0], [1.57072236E12, 2.0], [1.57072398E12, 2.0], [1.57072242E12, 2.0], [1.57072464E12, 2.0], [1.57072506E12, 2.0], [1.57072182E12, 2.0], [1.57072404E12, 2.0], [1.57072344E12, 3.0], [1.57072284E12, 2.0], [1.57072446E12, 2.0], [1.5707232E12, 2.0], [1.57072482E12, 2.0], [1.5707226E12, 2.0], [1.57072422E12, 2.0], [1.57072362E12, 2.0], [1.570722E12, 2.0], [1.57072302E12, 2.0], [1.57072368E12, 2.0], [1.57072308E12, 2.0], [1.5707247E12, 2.0], [1.57072248E12, 2.0], [1.5707241E12, 2.0], [1.5707235E12, 3.0], [1.57072188E12, 2.0], [1.57072224E12, 2.0], [1.57072386E12, 3.0], [1.57072164E12, 2.0], [1.57072326E12, 2.0], [1.57072266E12, 2.0], [1.57072488E12, 2.0], [1.57072206E12, 2.0], [1.57072428E12, 2.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.57072272E12, 9.0], [1.57072434E12, 12.0], [1.57072374E12, 11.0], [1.57072212E12, 9.0], [1.57072152E12, 24.599999999999994], [1.57072314E12, 9.0], [1.57072254E12, 9.0], [1.57072476E12, 11.0], [1.57072494E12, 14.0], [1.5707229E12, 11.0], [1.5707223E12, 9.0], [1.57072452E12, 9.0], [1.5707217E12, 31.0], [1.57072392E12, 60.0], [1.57072332E12, 12.0], [1.57072512E12, 36.0], [1.57072338E12, 10.0], [1.57072176E12, 10.0], [1.57072278E12, 9.0], [1.57072218E12, 11.0], [1.5707244E12, 10.0], [1.570725E12, 10.0], [1.57072158E12, 23.0], [1.5707238E12, 10.0], [1.57072194E12, 9.0], [1.57072416E12, 61.0], [1.57072356E12, 9.0], [1.57072296E12, 9.0], [1.57072458E12, 10.0], [1.57072236E12, 8.0], [1.57072398E12, 76.0], [1.57072242E12, 8.0], [1.57072464E12, 10.0], [1.57072506E12, 10.0], [1.57072182E12, 10.0], [1.57072404E12, 14.0], [1.57072344E12, 34.0], [1.57072284E12, 13.0], [1.57072446E12, 11.0], [1.5707232E12, 9.0], [1.57072482E12, 10.0], [1.5707226E12, 8.0], [1.57072422E12, 49.0], [1.57072362E12, 10.0], [1.570722E12, 11.0], [1.57072302E12, 9.0], [1.57072368E12, 9.0], [1.57072308E12, 8.0], [1.5707247E12, 14.0], [1.57072248E12, 9.0], [1.5707241E12, 13.0], [1.5707235E12, 12.0], [1.57072188E12, 13.0], [1.57072224E12, 10.0], [1.57072386E12, 61.0], [1.57072164E12, 10.0], [1.57072326E12, 9.0], [1.57072266E12, 9.0], [1.57072488E12, 12.0], [1.57072206E12, 100.0], [1.57072428E12, 8.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.57072272E12, 118.0], [1.57072434E12, 122.10000000000036], [1.57072374E12, 115.61999999999989], [1.57072212E12, 114.0], [1.57072152E12, 84.32], [1.57072314E12, 127.14000000000033], [1.57072254E12, 123.0], [1.57072476E12, 124.0], [1.57072494E12, 110.0], [1.5707229E12, 127.0], [1.5707223E12, 129.0], [1.57072452E12, 114.0], [1.5707217E12, 196.0], [1.57072392E12, 144.5699999999997], [1.57072332E12, 128.0], [1.57072512E12, 223.1100000000024], [1.57072338E12, 101.15999999999985], [1.57072176E12, 95.86999999999989], [1.57072278E12, 121.0], [1.57072218E12, 121.72999999999956], [1.5707244E12, 113.0], [1.570725E12, 119.43000000000029], [1.57072158E12, 127.0], [1.5707238E12, 124.0], [1.57072194E12, 121.0], [1.57072416E12, 301.4299999999985], [1.57072356E12, 159.85999999999967], [1.57072296E12, 116.0], [1.57072458E12, 118.0], [1.57072236E12, 117.0], [1.57072398E12, 790.75], [1.57072242E12, 113.0], [1.57072464E12, 130.0], [1.57072506E12, 75.97999999999956], [1.57072182E12, 121.0], [1.57072404E12, 116.27999999999975], [1.57072344E12, 186.0], [1.57072284E12, 139.9399999999996], [1.57072446E12, 154.07999999999993], [1.5707232E12, 126.0], [1.57072482E12, 106.0], [1.5707226E12, 124.0], [1.57072422E12, 381.1999999999989], [1.57072362E12, 107.55999999999949], [1.570722E12, 121.44999999999982], [1.57072302E12, 109.0], [1.57072368E12, 96.0], [1.57072308E12, 102.9399999999996], [1.5707247E12, 114.67000000000007], [1.57072248E12, 125.0], [1.5707241E12, 129.34000000000015], [1.5707235E12, 127.01999999999953], [1.57072188E12, 120.81999999999971], [1.57072224E12, 109.0], [1.57072386E12, 382.0], [1.57072164E12, 114.0], [1.57072326E12, 117.0], [1.57072266E12, 123.0], [1.57072488E12, 123.0], [1.57072206E12, 469.78999999999996], [1.57072428E12, 107.71999999999935]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.57072272E12, 30.0], [1.57072434E12, 59.0], [1.57072374E12, 33.0], [1.57072212E12, 27.0], [1.57072152E12, 44.39999999999995], [1.57072314E12, 49.0], [1.57072254E12, 18.0], [1.57072476E12, 52.44999999999982], [1.57072494E12, 40.0], [1.5707229E12, 50.0], [1.5707223E12, 29.0], [1.57072452E12, 13.0], [1.5707217E12, 74.0], [1.57072392E12, 84.0], [1.57072332E12, 57.0], [1.57072512E12, 86.05000000000018], [1.57072338E12, 15.0], [1.57072176E12, 14.0], [1.57072278E12, 47.5], [1.57072218E12, 22.0], [1.5707244E12, 38.0], [1.570725E12, 14.0], [1.57072158E12, 76.0], [1.5707238E12, 46.0], [1.57072194E12, 43.5], [1.57072416E12, 108.0], [1.57072356E12, 29.0], [1.57072296E12, 39.04999999999927], [1.57072458E12, 40.0], [1.57072236E12, 18.0], [1.57072398E12, 142.0], [1.57072242E12, 13.0], [1.57072464E12, 39.0], [1.57072506E12, 14.0], [1.57072182E12, 57.0], [1.57072404E12, 54.0], [1.57072344E12, 86.0], [1.57072284E12, 72.69999999999982], [1.57072446E12, 60.69999999999982], [1.5707232E12, 60.0], [1.57072482E12, 17.0], [1.5707226E12, 32.0], [1.57072422E12, 104.0], [1.57072362E12, 21.0], [1.570722E12, 49.0], [1.57072302E12, 33.0], [1.57072368E12, 15.0], [1.57072308E12, 10.0], [1.5707247E12, 42.349999999999454], [1.57072248E12, 19.599999999999454], [1.5707241E12, 66.0], [1.5707235E12, 51.0], [1.57072188E12, 55.0], [1.57072224E12, 14.0], [1.57072386E12, 108.0], [1.57072164E12, 29.0], [1.57072326E12, 49.0], [1.57072266E12, 48.0], [1.57072488E12, 33.0], [1.57072206E12, 157.0], [1.57072428E12, 20.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57072512E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 5.0, "minX": 1.0, "maxY": 4815.0, "series": [{"data": [[3.0, 51.0], [5.0, 58.0], [6.0, 9.0], [8.0, 11.5], [12.0, 8.5], [14.0, 13.5], [15.0, 13.0], [19.0, 9.0], [21.0, 11.0], [25.0, 7.0], [26.0, 17.0], [27.0, 10.0], [30.0, 8.0], [31.0, 7.0], [37.0, 417.0], [38.0, 39.5], [41.0, 8.0], [42.0, 7.5], [44.0, 8.0], [49.0, 8.0], [52.0, 6.0], [55.0, 7.0], [57.0, 8.0], [58.0, 6.0], [59.0, 5.0], [60.0, 7.0], [63.0, 8.0], [62.0, 7.0], [65.0, 7.0], [67.0, 5.0], [70.0, 6.0], [71.0, 94.5], [68.0, 48.0], [69.0, 102.0], [75.0, 38.0], [72.0, 48.5], [73.0, 157.0], [78.0, 6.0], [79.0, 92.0], [80.0, 156.5], [82.0, 5.0], [81.0, 62.5], [86.0, 77.0], [85.0, 10.0], [84.0, 42.0], [87.0, 69.0], [88.0, 35.5], [91.0, 12.0], [90.0, 37.0], [89.0, 50.0], [94.0, 9.0], [93.0, 7.5], [95.0, 7.0], [92.0, 32.5], [97.0, 7.0], [98.0, 20.0], [96.0, 8.0], [99.0, 10.0], [100.0, 49.0], [102.0, 30.0], [103.0, 8.0], [101.0, 9.0], [106.0, 9.0], [107.0, 7.0], [104.0, 8.0], [105.0, 8.0], [111.0, 6.0], [109.0, 6.0], [108.0, 6.0], [110.0, 6.0], [112.0, 6.0], [115.0, 6.0], [114.0, 6.0], [113.0, 6.0], [117.0, 6.0], [118.0, 6.0], [119.0, 6.0], [116.0, 6.0], [121.0, 6.0], [122.0, 6.0], [120.0, 6.0], [123.0, 6.0], [125.0, 6.0], [124.0, 6.0], [126.0, 6.0], [127.0, 6.0], [134.0, 6.0], [135.0, 6.0], [133.0, 6.0], [132.0, 6.0], [129.0, 6.0], [130.0, 6.0], [128.0, 6.0], [131.0, 6.0], [139.0, 6.0], [137.0, 6.0], [141.0, 6.0], [136.0, 6.0], [140.0, 6.0], [143.0, 6.0], [142.0, 6.0], [138.0, 6.0], [149.0, 5.0], [144.0, 6.0], [147.0, 6.0], [145.0, 5.0], [151.0, 5.0], [148.0, 6.0], [146.0, 6.0], [150.0, 5.0], [156.0, 5.0], [154.0, 5.0], [153.0, 5.0], [152.0, 6.0], [159.0, 5.0], [155.0, 5.0], [158.0, 6.5], [163.0, 6.0], [1.0, 13.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[126.0, 4815.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 163.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 417.0, "series": [{"data": [[3.0, 51.0], [5.0, 58.0], [6.0, 9.0], [8.0, 11.5], [12.0, 8.5], [14.0, 13.5], [15.0, 13.0], [19.0, 9.0], [21.0, 11.0], [25.0, 7.0], [26.0, 16.0], [27.0, 10.0], [30.0, 8.0], [31.0, 7.0], [37.0, 417.0], [38.0, 39.5], [41.0, 8.0], [42.0, 7.5], [44.0, 8.0], [49.0, 8.0], [52.0, 6.0], [55.0, 7.0], [57.0, 8.0], [58.0, 6.0], [59.0, 5.0], [60.0, 7.0], [63.0, 8.0], [62.0, 7.0], [65.0, 7.0], [67.0, 5.0], [70.0, 6.0], [71.0, 94.5], [68.0, 48.0], [69.0, 99.0], [75.0, 38.0], [72.0, 45.5], [73.0, 157.0], [78.0, 6.0], [79.0, 92.0], [80.0, 156.5], [82.0, 5.0], [81.0, 62.5], [86.0, 76.5], [85.0, 10.0], [84.0, 42.0], [87.0, 68.0], [88.0, 35.5], [91.0, 12.0], [90.0, 34.0], [89.0, 50.0], [94.0, 9.0], [93.0, 7.0], [95.0, 7.0], [92.0, 30.0], [97.0, 7.0], [98.0, 20.0], [96.0, 8.0], [99.0, 10.0], [100.0, 48.5], [102.0, 29.5], [103.0, 8.0], [101.0, 8.5], [106.0, 9.0], [107.0, 7.0], [104.0, 8.0], [105.0, 8.0], [111.0, 6.0], [109.0, 6.0], [108.0, 6.0], [110.0, 6.0], [112.0, 6.0], [115.0, 6.0], [114.0, 6.0], [113.0, 6.0], [117.0, 6.0], [118.0, 6.0], [119.0, 6.0], [116.0, 6.0], [121.0, 6.0], [122.0, 6.0], [120.0, 6.0], [123.0, 6.0], [125.0, 6.0], [124.0, 6.0], [126.0, 6.0], [127.0, 6.0], [134.0, 6.0], [135.0, 6.0], [133.0, 6.0], [132.0, 6.0], [129.0, 6.0], [130.0, 6.0], [128.0, 6.0], [131.0, 6.0], [139.0, 5.0], [137.0, 5.0], [141.0, 6.0], [136.0, 6.0], [140.0, 6.0], [143.0, 6.0], [142.0, 6.0], [138.0, 6.0], [149.0, 5.0], [144.0, 6.0], [147.0, 6.0], [145.0, 5.0], [151.0, 5.0], [148.0, 6.0], [146.0, 6.0], [150.0, 5.0], [156.0, 5.0], [154.0, 5.0], [153.0, 5.0], [152.0, 6.0], [159.0, 5.0], [155.0, 5.0], [158.0, 6.5], [163.0, 6.0], [1.0, 13.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[126.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 163.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 3.066666666666667, "minX": 1.57072152E12, "maxY": 128.21666666666667, "series": [{"data": [[1.57072272E12, 125.1], [1.57072434E12, 124.78333333333333], [1.57072374E12, 123.96666666666667], [1.57072212E12, 123.85], [1.57072152E12, 3.066666666666667], [1.57072314E12, 124.73333333333333], [1.57072254E12, 125.88333333333334], [1.57072476E12, 126.15], [1.57072494E12, 124.43333333333334], [1.5707229E12, 125.1], [1.5707223E12, 124.38333333333334], [1.57072452E12, 125.7], [1.5707217E12, 123.75], [1.57072392E12, 122.36666666666666], [1.57072332E12, 123.58333333333333], [1.57072512E12, 96.61666666666666], [1.57072338E12, 125.7], [1.57072176E12, 123.45], [1.57072278E12, 127.5], [1.57072218E12, 123.76666666666667], [1.5707244E12, 125.1], [1.570725E12, 124.26666666666667], [1.57072158E12, 88.23333333333333], [1.5707238E12, 124.31666666666666], [1.57072194E12, 127.13333333333334], [1.57072416E12, 121.83333333333333], [1.57072356E12, 125.23333333333333], [1.57072296E12, 126.65], [1.57072458E12, 125.1], [1.57072236E12, 124.31666666666666], [1.57072398E12, 117.98333333333333], [1.57072242E12, 124.63333333333334], [1.57072464E12, 125.18333333333334], [1.57072506E12, 125.85], [1.57072182E12, 126.18333333333334], [1.57072404E12, 124.43333333333334], [1.57072344E12, 125.71666666666667], [1.57072284E12, 123.4], [1.57072446E12, 124.1], [1.5707232E12, 125.73333333333333], [1.57072482E12, 127.78333333333333], [1.5707226E12, 123.11666666666666], [1.57072422E12, 119.61666666666666], [1.57072362E12, 125.71666666666667], [1.570722E12, 125.9], [1.57072302E12, 126.91666666666667], [1.57072368E12, 124.73333333333333], [1.57072308E12, 126.75], [1.5707247E12, 123.86666666666666], [1.57072248E12, 126.43333333333334], [1.5707241E12, 126.33333333333333], [1.5707235E12, 126.53333333333333], [1.57072188E12, 123.63333333333334], [1.57072224E12, 128.21666666666667], [1.57072386E12, 119.93333333333334], [1.57072164E12, 125.76666666666667], [1.57072326E12, 126.11666666666666], [1.57072266E12, 126.68333333333334], [1.57072488E12, 124.75], [1.57072206E12, 118.66666666666667], [1.57072428E12, 126.01666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57072512E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.57072152E12, "maxY": 64.13333333333334, "series": [{"data": [[1.57072272E12, 62.56666666666667], [1.57072434E12, 62.43333333333333], [1.57072374E12, 61.916666666666664], [1.57072212E12, 61.9], [1.57072152E12, 1.6], [1.57072314E12, 62.43333333333333], [1.57072254E12, 62.93333333333333], [1.57072476E12, 63.083333333333336], [1.57072494E12, 62.2], [1.5707229E12, 62.55], [1.5707223E12, 62.25], [1.57072452E12, 62.86666666666667], [1.5707217E12, 61.81666666666667], [1.57072392E12, 61.15], [1.57072332E12, 61.8], [1.57072512E12, 48.35], [1.57072338E12, 62.833333333333336], [1.57072176E12, 61.81666666666667], [1.57072278E12, 63.71666666666667], [1.57072218E12, 61.9], [1.5707244E12, 62.5], [1.570725E12, 62.11666666666667], [1.57072158E12, 44.31666666666667], [1.5707238E12, 62.13333333333333], [1.57072194E12, 63.63333333333333], [1.57072416E12, 60.983333333333334], [1.57072356E12, 62.63333333333333], [1.57072296E12, 63.35], [1.57072458E12, 62.61666666666667], [1.57072236E12, 62.15], [1.57072398E12, 59.0], [1.57072242E12, 62.3], [1.57072464E12, 62.53333333333333], [1.57072506E12, 62.95], [1.57072182E12, 63.03333333333333], [1.57072404E12, 62.25], [1.57072344E12, 62.81666666666667], [1.57072284E12, 61.7], [1.57072446E12, 62.03333333333333], [1.5707232E12, 62.78333333333333], [1.57072482E12, 63.96666666666667], [1.5707226E12, 61.61666666666667], [1.57072422E12, 59.85], [1.57072362E12, 62.9], [1.570722E12, 62.9], [1.57072302E12, 63.5], [1.57072368E12, 62.36666666666667], [1.57072308E12, 63.333333333333336], [1.5707247E12, 61.916666666666664], [1.57072248E12, 63.18333333333333], [1.5707241E12, 63.05], [1.5707235E12, 63.333333333333336], [1.57072188E12, 61.78333333333333], [1.57072224E12, 64.08333333333333], [1.57072386E12, 60.0], [1.57072164E12, 62.86666666666667], [1.57072326E12, 63.05], [1.57072266E12, 63.31666666666667], [1.57072488E12, 62.333333333333336], [1.57072206E12, 59.36666666666667], [1.57072428E12, 63.016666666666666]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.57072272E12, 62.53333333333333], [1.57072434E12, 62.38333333333333], [1.57072374E12, 62.03333333333333], [1.57072212E12, 61.96666666666667], [1.57072152E12, 1.45], [1.57072314E12, 62.31666666666667], [1.57072254E12, 62.93333333333333], [1.57072476E12, 63.083333333333336], [1.57072494E12, 62.233333333333334], [1.5707229E12, 62.55], [1.5707223E12, 62.1], [1.57072452E12, 62.85], [1.5707217E12, 61.86666666666667], [1.57072392E12, 61.21666666666667], [1.57072332E12, 61.81666666666667], [1.57072512E12, 48.28333333333333], [1.57072338E12, 62.85], [1.57072176E12, 61.71666666666667], [1.57072278E12, 63.766666666666666], [1.57072218E12, 61.86666666666667], [1.5707244E12, 62.6], [1.570725E12, 62.15], [1.57072158E12, 43.916666666666664], [1.5707238E12, 62.18333333333333], [1.57072194E12, 63.516666666666666], [1.57072416E12, 60.983333333333334], [1.57072356E12, 62.583333333333336], [1.57072296E12, 63.28333333333333], [1.57072458E12, 62.43333333333333], [1.57072236E12, 62.18333333333333], [1.57072398E12, 58.9], [1.57072242E12, 62.333333333333336], [1.57072464E12, 62.68333333333333], [1.57072506E12, 62.88333333333333], [1.57072182E12, 63.13333333333333], [1.57072404E12, 62.266666666666666], [1.57072344E12, 62.833333333333336], [1.57072284E12, 61.71666666666667], [1.57072446E12, 62.05], [1.5707232E12, 62.93333333333333], [1.57072482E12, 63.81666666666667], [1.5707226E12, 61.516666666666666], [1.57072422E12, 59.8], [1.57072362E12, 62.81666666666667], [1.570722E12, 63.0], [1.57072302E12, 63.416666666666664], [1.57072368E12, 62.38333333333333], [1.57072308E12, 63.416666666666664], [1.5707247E12, 61.95], [1.57072248E12, 63.266666666666666], [1.5707241E12, 63.03333333333333], [1.5707235E12, 63.28333333333333], [1.57072188E12, 61.833333333333336], [1.57072224E12, 64.13333333333334], [1.57072386E12, 59.95], [1.57072164E12, 62.9], [1.57072326E12, 63.05], [1.57072266E12, 63.36666666666667], [1.57072488E12, 62.416666666666664], [1.57072206E12, 59.3], [1.57072428E12, 63.03333333333333]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.57072428E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57072512E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.57072152E12, "maxY": 64.13333333333334, "series": [{"data": [[1.57072272E12, 62.53333333333333], [1.57072434E12, 62.38333333333333], [1.57072374E12, 62.03333333333333], [1.57072212E12, 61.96666666666667], [1.57072152E12, 1.45], [1.57072314E12, 62.31666666666667], [1.57072254E12, 62.93333333333333], [1.57072476E12, 63.083333333333336], [1.57072494E12, 62.233333333333334], [1.5707229E12, 62.55], [1.5707223E12, 62.1], [1.57072452E12, 62.85], [1.5707217E12, 61.86666666666667], [1.57072392E12, 61.21666666666667], [1.57072332E12, 61.81666666666667], [1.57072512E12, 48.28333333333333], [1.57072338E12, 62.85], [1.57072176E12, 61.71666666666667], [1.57072278E12, 63.766666666666666], [1.57072218E12, 61.86666666666667], [1.5707244E12, 62.6], [1.570725E12, 62.15], [1.57072158E12, 43.916666666666664], [1.5707238E12, 62.18333333333333], [1.57072194E12, 63.516666666666666], [1.57072416E12, 60.983333333333334], [1.57072356E12, 62.583333333333336], [1.57072296E12, 63.28333333333333], [1.57072458E12, 62.43333333333333], [1.57072236E12, 62.18333333333333], [1.57072398E12, 58.9], [1.57072242E12, 62.333333333333336], [1.57072464E12, 62.68333333333333], [1.57072506E12, 62.88333333333333], [1.57072182E12, 63.13333333333333], [1.57072404E12, 62.266666666666666], [1.57072344E12, 62.833333333333336], [1.57072284E12, 61.71666666666667], [1.57072446E12, 62.05], [1.5707232E12, 62.93333333333333], [1.57072482E12, 63.81666666666667], [1.5707226E12, 61.516666666666666], [1.57072422E12, 59.8], [1.57072362E12, 62.81666666666667], [1.570722E12, 63.0], [1.57072302E12, 63.416666666666664], [1.57072368E12, 62.38333333333333], [1.57072308E12, 63.416666666666664], [1.5707247E12, 61.95], [1.57072248E12, 63.266666666666666], [1.5707241E12, 63.03333333333333], [1.5707235E12, 63.28333333333333], [1.57072188E12, 61.833333333333336], [1.57072224E12, 64.13333333333334], [1.57072386E12, 59.95], [1.57072164E12, 62.9], [1.57072326E12, 63.05], [1.57072266E12, 63.36666666666667], [1.57072488E12, 62.416666666666664], [1.57072206E12, 59.3], [1.57072428E12, 63.03333333333333]], "isOverall": false, "label": "Login-success", "isController": false}, {"data": [[1.57072428E12, 0.016666666666666666]], "isOverall": false, "label": "Login-failure", "isController": false}, {"data": [[1.57072272E12, 62.56666666666667], [1.57072434E12, 62.43333333333333], [1.57072374E12, 61.916666666666664], [1.57072212E12, 61.9], [1.57072152E12, 1.6], [1.57072314E12, 62.43333333333333], [1.57072254E12, 62.93333333333333], [1.57072476E12, 63.083333333333336], [1.57072494E12, 62.2], [1.5707229E12, 62.55], [1.5707223E12, 62.25], [1.57072452E12, 62.86666666666667], [1.5707217E12, 61.81666666666667], [1.57072392E12, 61.15], [1.57072332E12, 61.8], [1.57072512E12, 48.35], [1.57072338E12, 62.833333333333336], [1.57072176E12, 61.81666666666667], [1.57072278E12, 63.71666666666667], [1.57072218E12, 61.9], [1.5707244E12, 62.5], [1.570725E12, 62.11666666666667], [1.57072158E12, 44.31666666666667], [1.5707238E12, 62.13333333333333], [1.57072194E12, 63.63333333333333], [1.57072416E12, 60.983333333333334], [1.57072356E12, 62.63333333333333], [1.57072296E12, 63.35], [1.57072458E12, 62.61666666666667], [1.57072236E12, 62.15], [1.57072398E12, 59.0], [1.57072242E12, 62.3], [1.57072464E12, 62.53333333333333], [1.57072506E12, 62.95], [1.57072182E12, 63.03333333333333], [1.57072404E12, 62.25], [1.57072344E12, 62.81666666666667], [1.57072284E12, 61.7], [1.57072446E12, 62.03333333333333], [1.5707232E12, 62.78333333333333], [1.57072482E12, 63.96666666666667], [1.5707226E12, 61.61666666666667], [1.57072422E12, 59.85], [1.57072362E12, 62.9], [1.570722E12, 62.9], [1.57072302E12, 63.5], [1.57072368E12, 62.36666666666667], [1.57072308E12, 63.333333333333336], [1.5707247E12, 61.916666666666664], [1.57072248E12, 63.18333333333333], [1.5707241E12, 63.05], [1.5707235E12, 63.333333333333336], [1.57072188E12, 61.78333333333333], [1.57072224E12, 64.08333333333333], [1.57072386E12, 60.0], [1.57072164E12, 62.86666666666667], [1.57072326E12, 63.05], [1.57072266E12, 63.31666666666667], [1.57072488E12, 62.333333333333336], [1.57072206E12, 59.36666666666667], [1.57072428E12, 63.016666666666666]], "isOverall": false, "label": "HomePage-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57072512E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.57072152E12, "maxY": 128.21666666666667, "series": [{"data": [[1.57072272E12, 125.1], [1.57072434E12, 124.81666666666666], [1.57072374E12, 123.95], [1.57072212E12, 123.86666666666666], [1.57072152E12, 3.05], [1.57072314E12, 124.75], [1.57072254E12, 125.86666666666666], [1.57072476E12, 126.16666666666667], [1.57072494E12, 124.43333333333334], [1.5707229E12, 125.1], [1.5707223E12, 124.35], [1.57072452E12, 125.71666666666667], [1.5707217E12, 123.68333333333334], [1.57072392E12, 122.36666666666666], [1.57072332E12, 123.61666666666666], [1.57072512E12, 96.63333333333334], [1.57072338E12, 125.68333333333334], [1.57072176E12, 123.53333333333333], [1.57072278E12, 127.48333333333333], [1.57072218E12, 123.76666666666667], [1.5707244E12, 125.1], [1.570725E12, 124.26666666666667], [1.57072158E12, 88.23333333333333], [1.5707238E12, 124.31666666666666], [1.57072194E12, 127.15], [1.57072416E12, 121.96666666666667], [1.57072356E12, 125.21666666666667], [1.57072296E12, 126.63333333333334], [1.57072458E12, 125.05], [1.57072236E12, 124.33333333333333], [1.57072398E12, 117.9], [1.57072242E12, 124.63333333333334], [1.57072464E12, 125.21666666666667], [1.57072506E12, 125.83333333333333], [1.57072182E12, 126.16666666666667], [1.57072404E12, 124.51666666666667], [1.57072344E12, 125.65], [1.57072284E12, 123.41666666666667], [1.57072446E12, 124.08333333333333], [1.5707232E12, 125.71666666666667], [1.57072482E12, 127.78333333333333], [1.5707226E12, 123.13333333333334], [1.57072422E12, 119.65], [1.57072362E12, 125.71666666666667], [1.570722E12, 125.9], [1.57072302E12, 126.91666666666667], [1.57072368E12, 124.75], [1.57072308E12, 126.75], [1.5707247E12, 123.86666666666666], [1.57072248E12, 126.45], [1.5707241E12, 126.08333333333333], [1.5707235E12, 126.61666666666666], [1.57072188E12, 123.61666666666666], [1.57072224E12, 128.21666666666667], [1.57072386E12, 119.95], [1.57072164E12, 125.76666666666667], [1.57072326E12, 126.1], [1.57072266E12, 126.68333333333334], [1.57072488E12, 124.75], [1.57072206E12, 118.66666666666667], [1.57072428E12, 126.05]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.57072428E12, 0.016666666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57072512E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

